"use strict"; (self.webpackChunkpricing_component_with_toggle = self.webpackChunkpricing_component_with_toggle || []).push([[179], { 750: () => { function J(e) { return "function" == typeof e } function jr(e) { const n = e(r => { Error.call(r), r.stack = (new Error).stack }); return n.prototype = Object.create(Error.prototype), n.prototype.constructor = n, n } const Br = jr(e => function (n) { e(this), this.message = n ? `${n.length} errors occurred during unsubscription:\n${n.map((r, o) => `${o + 1}) ${r.toString()}`).join("\n  ")}` : "", this.name = "UnsubscriptionError", this.errors = n }); function zn(e, t) { if (e) { const n = e.indexOf(t); 0 <= n && e.splice(n, 1) } } class rt { constructor(t) { this.initialTeardown = t, this.closed = !1, this._parentage = null, this._finalizers = null } unsubscribe() { let t; if (!this.closed) { this.closed = !0; const { _parentage: n } = this; if (n) if (this._parentage = null, Array.isArray(n)) for (const i of n) i.remove(this); else n.remove(this); const { initialTeardown: r } = this; if (J(r)) try { r() } catch (i) { t = i instanceof Br ? i.errors : [i] } const { _finalizers: o } = this; if (o) { this._finalizers = null; for (const i of o) try { Nu(i) } catch (s) { t = t ?? [], s instanceof Br ? t = [...t, ...s.errors] : t.push(s) } } if (t) throw new Br(t) } } add(t) { var n; if (t && t !== this) if (this.closed) Nu(t); else { if (t instanceof rt) { if (t.closed || t._hasParent(this)) return; t._addParent(this) } (this._finalizers = null !== (n = this._finalizers) && void 0 !== n ? n : []).push(t) } } _hasParent(t) { const { _parentage: n } = this; return n === t || Array.isArray(n) && n.includes(t) } _addParent(t) { const { _parentage: n } = this; this._parentage = Array.isArray(n) ? (n.push(t), n) : n ? [n, t] : t } _removeParent(t) { const { _parentage: n } = this; n === t ? this._parentage = null : Array.isArray(n) && zn(n, t) } remove(t) { const { _finalizers: n } = this; n && zn(n, t), t instanceof rt && t._removeParent(this) } } rt.EMPTY = (() => { const e = new rt; return e.closed = !0, e })(); const Tu = rt.EMPTY; function Au(e) { return e instanceof rt || e && "closed" in e && J(e.remove) && J(e.add) && J(e.unsubscribe) } function Nu(e) { J(e) ? e() : e.unsubscribe() } const Vt = { onUnhandledError: null, onStoppedNotification: null, Promise: void 0, useDeprecatedSynchronousErrorHandling: !1, useDeprecatedNextContext: !1 }, Vr = { setTimeout(e, t, ...n) { const { delegate: r } = Vr; return r?.setTimeout ? r.setTimeout(e, t, ...n) : setTimeout(e, t, ...n) }, clearTimeout(e) { const { delegate: t } = Vr; return (t?.clearTimeout || clearTimeout)(e) }, delegate: void 0 }; function Pu(e) { Vr.setTimeout(() => { const { onUnhandledError: t } = Vt; if (!t) throw e; t(e) }) } function xu() { } const Tg = mi("C", void 0, void 0); function mi(e, t, n) { return { kind: e, value: t, error: n } } let Ht = null; function Hr(e) { if (Vt.useDeprecatedSynchronousErrorHandling) { const t = !Ht; if (t && (Ht = { errorThrown: !1, error: null }), e(), t) { const { errorThrown: n, error: r } = Ht; if (Ht = null, n) throw r } } else e() } class yi extends rt { constructor(t) { super(), this.isStopped = !1, t ? (this.destination = t, Au(t) && t.add(this)) : this.destination = Rg } static create(t, n, r) { return new Wn(t, n, r) } next(t) { this.isStopped ? vi(function Ng(e) { return mi("N", e, void 0) }(t), this) : this._next(t) } error(t) { this.isStopped ? vi(function Ag(e) { return mi("E", void 0, e) }(t), this) : (this.isStopped = !0, this._error(t)) } complete() { this.isStopped ? vi(Tg, this) : (this.isStopped = !0, this._complete()) } unsubscribe() { this.closed || (this.isStopped = !0, super.unsubscribe(), this.destination = null) } _next(t) { this.destination.next(t) } _error(t) { try { this.destination.error(t) } finally { this.unsubscribe() } } _complete() { try { this.destination.complete() } finally { this.unsubscribe() } } } const xg = Function.prototype.bind; function Di(e, t) { return xg.call(e, t) } class Fg { constructor(t) { this.partialObserver = t } next(t) { const { partialObserver: n } = this; if (n.next) try { n.next(t) } catch (r) { $r(r) } } error(t) { const { partialObserver: n } = this; if (n.error) try { n.error(t) } catch (r) { $r(r) } else $r(t) } complete() { const { partialObserver: t } = this; if (t.complete) try { t.complete() } catch (n) { $r(n) } } } class Wn extends yi { constructor(t, n, r) { let o; if (super(), J(t) || !t) o = { next: t ?? void 0, error: n ?? void 0, complete: r ?? void 0 }; else { let i; this && Vt.useDeprecatedNextContext ? (i = Object.create(t), i.unsubscribe = () => this.unsubscribe(), o = { next: t.next && Di(t.next, i), error: t.error && Di(t.error, i), complete: t.complete && Di(t.complete, i) }) : o = t } this.destination = new Fg(o) } } function $r(e) { Vt.useDeprecatedSynchronousErrorHandling ? function Pg(e) { Vt.useDeprecatedSynchronousErrorHandling && Ht && (Ht.errorThrown = !0, Ht.error = e) }(e) : Pu(e) } function vi(e, t) { const { onStoppedNotification: n } = Vt; n && Vr.setTimeout(() => n(e, t)) } const Rg = { closed: !0, next: xu, error: function Og(e) { throw e }, complete: xu }, _i = "function" == typeof Symbol && Symbol.observable || "@@observable"; function Fu(e) { return e } let Ie = (() => { class e { constructor(n) { n && (this._subscribe = n) } lift(n) { const r = new e; return r.source = this, r.operator = n, r } subscribe(n, r, o) { const i = function kg(e) { return e && e instanceof yi || function Lg(e) { return e && J(e.next) && J(e.error) && J(e.complete) }(e) && Au(e) }(n) ? n : new Wn(n, r, o); return Hr(() => { const { operator: s, source: a } = this; i.add(s ? s.call(i, a) : a ? this._subscribe(i) : this._trySubscribe(i)) }), i } _trySubscribe(n) { try { return this._subscribe(n) } catch (r) { n.error(r) } } forEach(n, r) { return new (r = Ru(r))((o, i) => { const s = new Wn({ next: a => { try { n(a) } catch (u) { i(u), s.unsubscribe() } }, error: i, complete: o }); this.subscribe(s) }) } _subscribe(n) { var r; return null === (r = this.source) || void 0 === r ? void 0 : r.subscribe(n) } [_i]() { return this } pipe(...n) { return function Ou(e) { return 0 === e.length ? Fu : 1 === e.length ? e[0] : function (n) { return e.reduce((r, o) => o(r), n) } }(n)(this) } toPromise(n) { return new (n = Ru(n))((r, o) => { let i; this.subscribe(s => i = s, s => o(s), () => r(i)) }) } } return e.create = t => new e(t), e })(); function Ru(e) { var t; return null !== (t = e ?? Vt.Promise) && void 0 !== t ? t : Promise } const jg = jr(e => function () { e(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed" }); let wi = (() => { class e extends Ie { constructor() { super(), this.closed = !1, this.currentObservers = null, this.observers = [], this.isStopped = !1, this.hasError = !1, this.thrownError = null } lift(n) { const r = new Lu(this, this); return r.operator = n, r } _throwIfClosed() { if (this.closed) throw new jg } next(n) { Hr(() => { if (this._throwIfClosed(), !this.isStopped) { this.currentObservers || (this.currentObservers = Array.from(this.observers)); for (const r of this.currentObservers) r.next(n) } }) } error(n) { Hr(() => { if (this._throwIfClosed(), !this.isStopped) { this.hasError = this.isStopped = !0, this.thrownError = n; const { observers: r } = this; for (; r.length;)r.shift().error(n) } }) } complete() { Hr(() => { if (this._throwIfClosed(), !this.isStopped) { this.isStopped = !0; const { observers: n } = this; for (; n.length;)n.shift().complete() } }) } unsubscribe() { this.isStopped = this.closed = !0, this.observers = this.currentObservers = null } get observed() { var n; return (null === (n = this.observers) || void 0 === n ? void 0 : n.length) > 0 } _trySubscribe(n) { return this._throwIfClosed(), super._trySubscribe(n) } _subscribe(n) { return this._throwIfClosed(), this._checkFinalizedStatuses(n), this._innerSubscribe(n) } _innerSubscribe(n) { const { hasError: r, isStopped: o, observers: i } = this; return r || o ? Tu : (this.currentObservers = null, i.push(n), new rt(() => { this.currentObservers = null, zn(i, n) })) } _checkFinalizedStatuses(n) { const { hasError: r, thrownError: o, isStopped: i } = this; r ? n.error(o) : i && n.complete() } asObservable() { const n = new Ie; return n.source = this, n } } return e.create = (t, n) => new Lu(t, n), e })(); class Lu extends wi { constructor(t, n) { super(), this.destination = t, this.source = n } next(t) { var n, r; null === (r = null === (n = this.destination) || void 0 === n ? void 0 : n.next) || void 0 === r || r.call(n, t) } error(t) { var n, r; null === (r = null === (n = this.destination) || void 0 === n ? void 0 : n.error) || void 0 === r || r.call(n, t) } complete() { var t, n; null === (n = null === (t = this.destination) || void 0 === t ? void 0 : t.complete) || void 0 === n || n.call(t) } _subscribe(t) { var n, r; return null !== (r = null === (n = this.source) || void 0 === n ? void 0 : n.subscribe(t)) && void 0 !== r ? r : Tu } } function qn(e) { return t => { if (function Bg(e) { return J(e?.lift) }(t)) return t.lift(function (n) { try { return e(n, this) } catch (r) { this.error(r) } }); throw new TypeError("Unable to lift unknown Observable type") } } function Ur(e, t, n, r, o) { return new Vg(e, t, n, r, o) } class Vg extends yi { constructor(t, n, r, o, i, s) { super(t), this.onFinalize = i, this.shouldUnsubscribe = s, this._next = n ? function (a) { try { n(a) } catch (u) { t.error(u) } } : super._next, this._error = o ? function (a) { try { o(a) } catch (u) { t.error(u) } finally { this.unsubscribe() } } : super._error, this._complete = r ? function () { try { r() } catch (a) { t.error(a) } finally { this.unsubscribe() } } : super._complete } unsubscribe() { var t; if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) { const { closed: n } = this; super.unsubscribe(), !n && (null === (t = this.onFinalize) || void 0 === t || t.call(this)) } } } function Nt(e) { return this instanceof Nt ? (this.v = e, this) : new Nt(e) } function Vu(e) { if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined."); var n, t = e[Symbol.asyncIterator]; return t ? t.call(e) : (e = function Ii(e) { var t = "function" == typeof Symbol && Symbol.iterator, n = t && e[t], r = 0; if (n) return n.call(e); if (e && "number" == typeof e.length) return { next: function () { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e } } }; throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.") }(e), n = {}, r("next"), r("throw"), r("return"), n[Symbol.asyncIterator] = function () { return this }, n); function r(i) { n[i] = e[i] && function (s) { return new Promise(function (a, u) { !function o(i, s, a, u) { Promise.resolve(u).then(function (l) { i({ value: l, done: a }) }, s) }(a, u, (s = e[i](s)).done, s.value) }) } } } "function" == typeof SuppressedError && SuppressedError; const Hu = e => e && "number" == typeof e.length && "function" != typeof e; function $u(e) { return J(e?.then) } function Uu(e) { return J(e[_i]) } function Gu(e) { return Symbol.asyncIterator && J(e?.[Symbol.asyncIterator]) } function zu(e) { return new TypeError(`You provided ${null !== e && "object" == typeof e ? "an invalid object" : `'${e}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`) } const Wu = function lm() { return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator" }(); function qu(e) { return J(e?.[Wu]) } function Yu(e) { return function Bu(e, t, n) { if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined."); var o, r = n.apply(e, t || []), i = []; return o = {}, s("next"), s("throw"), s("return"), o[Symbol.asyncIterator] = function () { return this }, o; function s(f) { r[f] && (o[f] = function (h) { return new Promise(function (p, g) { i.push([f, h, p, g]) > 1 || a(f, h) }) }) } function a(f, h) { try { !function u(f) { f.value instanceof Nt ? Promise.resolve(f.value.v).then(l, c) : d(i[0][2], f) }(r[f](h)) } catch (p) { d(i[0][3], p) } } function l(f) { a("next", f) } function c(f) { a("throw", f) } function d(f, h) { f(h), i.shift(), i.length && a(i[0][0], i[0][1]) } }(this, arguments, function* () { const n = e.getReader(); try { for (; ;) { const { value: r, done: o } = yield Nt(n.read()); if (o) return yield Nt(void 0); yield yield Nt(r) } } finally { n.releaseLock() } }) } function Zu(e) { return J(e?.getReader) } function Pt(e) { if (e instanceof Ie) return e; if (null != e) { if (Uu(e)) return function cm(e) { return new Ie(t => { const n = e[_i](); if (J(n.subscribe)) return n.subscribe(t); throw new TypeError("Provided object does not correctly implement Symbol.observable") }) }(e); if (Hu(e)) return function dm(e) { return new Ie(t => { for (let n = 0; n < e.length && !t.closed; n++)t.next(e[n]); t.complete() }) }(e); if ($u(e)) return function fm(e) { return new Ie(t => { e.then(n => { t.closed || (t.next(n), t.complete()) }, n => t.error(n)).then(null, Pu) }) }(e); if (Gu(e)) return Qu(e); if (qu(e)) return function hm(e) { return new Ie(t => { for (const n of e) if (t.next(n), t.closed) return; t.complete() }) }(e); if (Zu(e)) return function pm(e) { return Qu(Yu(e)) }(e) } throw zu(e) } function Qu(e) { return new Ie(t => { (function gm(e, t) { var n, r, o, i; return function ku(e, t, n, r) { return new (n || (n = Promise))(function (i, s) { function a(c) { try { l(r.next(c)) } catch (d) { s(d) } } function u(c) { try { l(r.throw(c)) } catch (d) { s(d) } } function l(c) { c.done ? i(c.value) : function o(i) { return i instanceof n ? i : new n(function (s) { s(i) }) }(c.value).then(a, u) } l((r = r.apply(e, t || [])).next()) }) }(this, void 0, void 0, function* () { try { for (n = Vu(e); !(r = yield n.next()).done;)if (t.next(r.value), t.closed) return } catch (s) { o = { error: s } } finally { try { r && !r.done && (i = n.return) && (yield i.call(n)) } finally { if (o) throw o.error } } t.complete() }) })(e, t).catch(n => t.error(n)) }) } function xt(e, t, n, r = 0, o = !1) { const i = t.schedule(function () { n(), o ? e.add(this.schedule(null, r)) : this.unsubscribe() }, r); if (e.add(i), !o) return i } function Ku(e, t, n = 1 / 0) { return J(t) ? Ku((r, o) => function Hg(e, t) { return qn((n, r) => { let o = 0; n.subscribe(Ur(r, i => { r.next(e.call(t, i, o++)) })) }) }((i, s) => t(r, i, o, s))(Pt(e(r, o))), n) : ("number" == typeof t && (n = t), qn((r, o) => function mm(e, t, n, r, o, i, s, a) { const u = []; let l = 0, c = 0, d = !1; const f = () => { d && !u.length && !l && t.complete() }, h = g => l < r ? p(g) : u.push(g), p = g => { i && t.next(g), l++; let D = !1; Pt(n(g, c++)).subscribe(Ur(t, v => { o?.(v), i ? h(v) : t.next(v) }, () => { D = !0 }, void 0, () => { if (D) try { for (l--; u.length && l < r;) { const v = u.shift(); s ? xt(t, s, () => p(v)) : p(v) } f() } catch (v) { t.error(v) } })) }; return e.subscribe(Ur(t, h, () => { d = !0, f() })), () => { a?.() } }(r, o, e, n))) } const Xu = new Ie(e => e.complete()); function Mi(e) { return e[e.length - 1] } function Ju(e, t = 0) { return qn((n, r) => { n.subscribe(Ur(r, o => xt(r, e, () => r.next(o), t), () => xt(r, e, () => r.complete(), t), o => xt(r, e, () => r.error(o), t))) }) } function el(e, t = 0) { return qn((n, r) => { r.add(e.schedule(() => n.subscribe(r), t)) }) } function tl(e, t) { if (!e) throw new Error("Iterable cannot be null"); return new Ie(n => { xt(n, t, () => { const r = e[Symbol.asyncIterator](); xt(n, t, () => { r.next().then(o => { o.done ? n.complete() : n.next(o.value) }) }, 0, !0) }) }) } function Am(...e) { const t = function _m(e) { return function vm(e) { return e && J(e.schedule) }(Mi(e)) ? e.pop() : void 0 }(e), n = function wm(e, t) { return "number" == typeof Mi(e) ? e.pop() : t }(e, 1 / 0), r = e; return r.length ? 1 === r.length ? Pt(r[0]) : function ym(e = 1 / 0) { return Ku(Fu, e) }(n)(function Tm(e, t) { return t ? function Sm(e, t) { if (null != e) { if (Uu(e)) return function Em(e, t) { return Pt(e).pipe(el(t), Ju(t)) }(e, t); if (Hu(e)) return function bm(e, t) { return new Ie(n => { let r = 0; return t.schedule(function () { r === e.length ? n.complete() : (n.next(e[r++]), n.closed || this.schedule()) }) }) }(e, t); if ($u(e)) return function Cm(e, t) { return Pt(e).pipe(el(t), Ju(t)) }(e, t); if (Gu(e)) return tl(e, t); if (qu(e)) return function Im(e, t) { return new Ie(n => { let r; return xt(n, t, () => { r = e[Wu](), xt(n, t, () => { let o, i; try { ({ value: o, done: i } = r.next()) } catch (s) { return void n.error(s) } i ? n.complete() : n.next(o) }, 0, !0) }), () => J(r?.return) && r.return() }) }(e, t); if (Zu(e)) return function Mm(e, t) { return tl(Yu(e), t) }(e, t) } throw zu(e) }(e, t) : Pt(e) }(r, t)) : Xu } function Si(e, t, ...n) { if (!0 === t) return void e(); if (!1 === t) return; const r = new Wn({ next: () => { r.unsubscribe(), e() } }); return Pt(t(...n)).subscribe(r) } function z(e) { for (let t in e) if (e[t] === z) return t; throw Error("Could not find renamed property on target object.") } function W(e) { if ("string" == typeof e) return e; if (Array.isArray(e)) return "[" + e.map(W).join(", ") + "]"; if (null == e) return "" + e; if (e.overriddenName) return `${e.overriddenName}`; if (e.name) return `${e.name}`; const t = e.toString(); if (null == t) return "" + t; const n = t.indexOf("\n"); return -1 === n ? t : t.substring(0, n) } function Ai(e, t) { return null == e || "" === e ? null === t ? "" : t : null == t || "" === t ? e : e + " " + t } const Pm = z({ __forward_ref__: z }); function Ni(e) { return e.__forward_ref__ = Ni, e.toString = function () { return W(this()) }, e } function M(e) { return function Pi(e) { return "function" == typeof e && e.hasOwnProperty(Pm) && e.__forward_ref__ === Ni }(e) ? e() : e } function xi(e) { return e && !!e.\u0275providers } class C extends Error { constructor(t, n) { super(Gr(t, n)), this.code = t } } function Gr(e, t) { return `NG0${Math.abs(e)}${t ? ": " + t.trim() : ""}` } function A(e) { return "string" == typeof e ? e : null == e ? "" : String(e) } function zr(e, t) { throw new C(-201, !1) } function Ve(e, t) { null == e && function U(e, t, n, r) { throw new Error(`ASSERTION ERROR: ${e}` + (null == r ? "" : ` [Expected=> ${n} ${r} ${t} <=Actual]`)) }(t, e, null, "!=") } function Q(e) { return { token: e.token, providedIn: e.providedIn || null, factory: e.factory, value: void 0 } } function tn(e) { return { providers: e.providers || [], imports: e.imports || [] } } function Wr(e) { return rl(e, qr) || rl(e, il) } function rl(e, t) { return e.hasOwnProperty(t) ? e[t] : null } function ol(e) { return e && (e.hasOwnProperty(Fi) || e.hasOwnProperty(jm)) ? e[Fi] : null } const qr = z({ \u0275prov: z }), Fi = z({ \u0275inj: z }), il = z({ ngInjectableDef: z }), jm = z({ ngInjectorDef: z }); var T = (() => ((T = T || {})[T.Default = 0] = "Default", T[T.Host = 1] = "Host", T[T.Self = 2] = "Self", T[T.SkipSelf = 4] = "SkipSelf", T[T.Optional = 8] = "Optional", T))(); let Oi; function He(e) { const t = Oi; return Oi = e, t } function sl(e, t, n) { const r = Wr(e); return r && "root" == r.providedIn ? void 0 === r.value ? r.value = r.factory() : r.value : n & T.Optional ? null : void 0 !== t ? t : void zr(W(e)) } const Y = (() => typeof globalThis < "u" && globalThis || typeof global < "u" && global || typeof window < "u" && window || typeof self < "u" && typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && self)(), Yn = {}, Ri = "__NG_DI_FLAG__", Yr = "ngTempTokenPath", Vm = "ngTokenPath", Hm = /\n/gm, $m = "\u0275", al = "__source"; let Zn; function nn(e) { const t = Zn; return Zn = e, t } function Um(e, t = T.Default) { if (void 0 === Zn) throw new C(-203, !1); return null === Zn ? sl(e, void 0, t) : Zn.get(e, t & T.Optional ? null : void 0, t) } function B(e, t = T.Default) { return (function Bm() { return Oi }() || Um)(M(e), t) } function Zr(e) { return typeof e > "u" || "number" == typeof e ? e : 0 | (e.optional && 8) | (e.host && 1) | (e.self && 2) | (e.skipSelf && 4) } function Li(e) { const t = []; for (let n = 0; n < e.length; n++) { const r = M(e[n]); if (Array.isArray(r)) { if (0 === r.length) throw new C(900, !1); let o, i = T.Default; for (let s = 0; s < r.length; s++) { const a = r[s], u = zm(a); "number" == typeof u ? -1 === u ? o = a.token : i |= u : o = a } t.push(B(o, i)) } else t.push(B(r)) } return t } function Qn(e, t) { return e[Ri] = t, e.prototype[Ri] = t, e } function zm(e) { return e[Ri] } function pt(e) { return { toString: e }.toString() } var ot = (() => ((ot = ot || {})[ot.OnPush = 0] = "OnPush", ot[ot.Default = 1] = "Default", ot))(), it = (() => { return (e = it || (it = {}))[e.Emulated = 0] = "Emulated", e[e.None = 2] = "None", e[e.ShadowDom = 3] = "ShadowDom", it; var e })(); const gt = {}, V = [], Qr = z({ \u0275cmp: z }), ki = z({ \u0275dir: z }), ji = z({ \u0275pipe: z }), ll = z({ \u0275mod: z }), mt = z({ \u0275fac: z }), Kn = z({ __NG_ELEMENT_ID__: z }); let Ym = 0; function Bi(e) { return pt(() => { const t = dl(e), n = { ...t, decls: e.decls, vars: e.vars, template: e.template, consts: e.consts || null, ngContentSelectors: e.ngContentSelectors, onPush: e.changeDetection === ot.OnPush, directiveDefs: null, pipeDefs: null, dependencies: t.standalone && e.dependencies || null, getStandaloneInjector: null, data: e.data || {}, encapsulation: e.encapsulation || it.Emulated, id: "c" + Ym++, styles: e.styles || V, _: null, schemas: e.schemas || null, tView: null }; fl(n); const r = e.dependencies; return n.directiveDefs = Kr(r, !1), n.pipeDefs = Kr(r, !0), n }) } function Qm(e) { return G(e) || pe(e) } function Km(e) { return null !== e } function Xn(e) { return pt(() => ({ type: e.type, bootstrap: e.bootstrap || V, declarations: e.declarations || V, imports: e.imports || V, exports: e.exports || V, transitiveCompileScopes: null, schemas: e.schemas || null, id: e.id || null })) } function cl(e, t) { if (null == e) return gt; const n = {}; for (const r in e) if (e.hasOwnProperty(r)) { let o = e[r], i = o; Array.isArray(o) && (i = o[1], o = o[0]), n[o] = r, t && (t[o] = i) } return n } function $e(e) { return pt(() => { const t = dl(e); return fl(t), t }) } function G(e) { return e[Qr] || null } function pe(e) { return e[ki] || null } function Se(e) { return e[ji] || null } function dl(e) { const t = {}; return { type: e.type, providersResolver: null, factory: null, hostBindings: e.hostBindings || null, hostVars: e.hostVars || 0, hostAttrs: e.hostAttrs || null, contentQueries: e.contentQueries || null, declaredInputs: t, exportAs: e.exportAs || null, standalone: !0 === e.standalone, selectors: e.selectors || V, viewQuery: e.viewQuery || null, features: e.features || null, setInput: null, findHostDirectiveDefs: null, hostDirectives: null, inputs: cl(e.inputs, t), outputs: cl(e.outputs) } } function fl(e) { e.features?.forEach(t => t(e)) } function Kr(e, t) { if (!e) return null; const n = t ? Se : Qm; return () => ("function" == typeof e ? e() : e).map(r => n(r)).filter(Km) } const yt = 0, w = 1, x = 2, ee = 3, Ye = 4, $t = 5, ge = 6, rn = 7, ne = 8, Xr = 9, Jr = 10, O = 11, Vi = 12, er = 13, hl = 14, on = 15, me = 16, tr = 17, sn = 18, st = 19, nr = 20, pl = 21, Z = 22, Hi = 1, gl = 2, eo = 7, an = 9, _e = 10; function Oe(e) { return Array.isArray(e) && "object" == typeof e[Hi] } function Ze(e) { return Array.isArray(e) && !0 === e[Hi] } function $i(e) { return 0 != (4 & e.flags) } function rr(e) { return e.componentOffset > -1 } function no(e) { return 1 == (1 & e.flags) } function Qe(e) { return !!e.template } function Jm(e) { return 0 != (256 & e[x]) } function Ut(e, t) { return e.hasOwnProperty(mt) ? e[mt] : null } class ny { constructor(t, n, r) { this.previousValue = t, this.currentValue = n, this.firstChange = r } isFirstChange() { return this.firstChange } } function Dl(e) { return e.type.prototype.ngOnChanges && (e.setInput = oy), ry } function ry() { const e = _l(this), t = e?.current; if (t) { const n = e.previous; if (n === gt) e.previous = t; else for (let r in t) n[r] = t[r]; e.current = null, this.ngOnChanges(t) } } function oy(e, t, n, r) { const o = this.declaredInputs[n], i = _l(e) || function iy(e, t) { return e[vl] = t }(e, { previous: gt, current: null }), s = i.current || (i.current = {}), a = i.previous, u = a[o]; s[o] = new ny(u && u.currentValue, t, a === gt), e[r] = t } const vl = "__ngSimpleChanges__"; function _l(e) { return e[vl] || null } const Ue = function (e, t, n) { }; function fe(e) { for (; Array.isArray(e);)e = e[yt]; return e } function Re(e, t) { return fe(t[e.index]) } function Cl(e, t) { return e.data[t] } function Te(e, t) { const n = t[e]; return Oe(n) ? n : n[yt] } function io(e) { return 64 == (64 & e[x]) } function Ot(e, t) { return null == t ? null : e[t] } function bl(e) { e[sn] = 0 } function Gi(e, t) { e[$t] += t; let n = e, r = e[ee]; for (; null !== r && (1 === t && 1 === n[$t] || -1 === t && 0 === n[$t]);)r[$t] += t, n = r, r = r[ee] } const N = { lFrame: Ol(null), bindingsEnabled: !0 }; function Ml() { return N.bindingsEnabled } function y() { return N.lFrame.lView } function j() { return N.lFrame.tView } function he() { let e = Sl(); for (; null !== e && 64 === e.type;)e = e.parent; return e } function Sl() { return N.lFrame.currentTNode } function at(e, t) { const n = N.lFrame; n.currentTNode = e, n.isParent = t } function zi() { return N.lFrame.isParent } function ln() { return N.lFrame.bindingIndex++ } function _y(e, t) { const n = N.lFrame; n.bindingIndex = n.bindingRootIndex = e, qi(t) } function qi(e) { N.lFrame.currentDirectiveIndex = e } function Zi(e) { N.lFrame.currentQueryIndex = e } function Ey(e) { const t = e[w]; return 2 === t.type ? t.declTNode : 1 === t.type ? e[ge] : null } function xl(e, t, n) { if (n & T.SkipSelf) { let o = t, i = e; for (; !(o = o.parent, null !== o || n & T.Host || (o = Ey(i), null === o || (i = i[on], 10 & o.type)));); if (null === o) return !1; t = o, e = i } const r = N.lFrame = Fl(); return r.currentTNode = t, r.lView = e, !0 } function Qi(e) { const t = Fl(), n = e[w]; N.lFrame = t, t.currentTNode = n.firstChild, t.lView = e, t.tView = n, t.contextLView = e, t.bindingIndex = n.bindingStartIndex, t.inI18n = !1 } function Fl() { const e = N.lFrame, t = null === e ? null : e.child; return null === t ? Ol(e) : t } function Ol(e) { const t = { currentTNode: null, isParent: !0, lView: null, tView: null, selectedIndex: -1, contextLView: null, elementDepthCount: 0, currentNamespace: null, currentDirectiveIndex: -1, bindingRootIndex: -1, bindingIndex: -1, currentQueryIndex: 0, parent: e, child: null, inI18n: !1 }; return null !== e && (e.child = t), t } function Rl() { const e = N.lFrame; return N.lFrame = e.parent, e.currentTNode = null, e.lView = null, e } const Ll = Rl; function Ki() { const e = Rl(); e.isParent = !0, e.tView = null, e.selectedIndex = -1, e.contextLView = null, e.elementDepthCount = 0, e.currentDirectiveIndex = -1, e.currentNamespace = null, e.bindingRootIndex = -1, e.bindingIndex = -1, e.currentQueryIndex = 0 } function Ee() { return N.lFrame.selectedIndex } function Gt(e) { N.lFrame.selectedIndex = e } function so(e, t) { for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) { const i = e.data[n].type.prototype, { ngAfterContentInit: s, ngAfterContentChecked: a, ngAfterViewInit: u, ngAfterViewChecked: l, ngOnDestroy: c } = i; s && (e.contentHooks ?? (e.contentHooks = [])).push(-n, s), a && ((e.contentHooks ?? (e.contentHooks = [])).push(n, a), (e.contentCheckHooks ?? (e.contentCheckHooks = [])).push(n, a)), u && (e.viewHooks ?? (e.viewHooks = [])).push(-n, u), l && ((e.viewHooks ?? (e.viewHooks = [])).push(n, l), (e.viewCheckHooks ?? (e.viewCheckHooks = [])).push(n, l)), null != c && (e.destroyHooks ?? (e.destroyHooks = [])).push(n, c) } } function ao(e, t, n) { kl(e, t, 3, n) } function uo(e, t, n, r) { (3 & e[x]) === n && kl(e, t, n, r) } function Xi(e, t) { let n = e[x]; (3 & n) === t && (n &= 2047, n += 1, e[x] = n) } function kl(e, t, n, r) { const i = r ?? -1, s = t.length - 1; let a = 0; for (let u = void 0 !== r ? 65535 & e[sn] : 0; u < s; u++)if ("number" == typeof t[u + 1]) { if (a = t[u], null != r && a >= r) break } else t[u] < 0 && (e[sn] += 65536), (a < i || -1 == i) && (Py(e, n, t, u), e[sn] = (4294901760 & e[sn]) + u + 2), u++ } function Py(e, t, n, r) { const o = n[r] < 0, i = n[r + 1], a = e[o ? -n[r] : n[r]]; if (o) { if (e[x] >> 11 < e[sn] >> 16 && (3 & e[x]) === t) { e[x] += 2048, Ue(4, a, i); try { i.call(a) } finally { Ue(5, a, i) } } } else { Ue(4, a, i); try { i.call(a) } finally { Ue(5, a, i) } } } const cn = -1; class ir { constructor(t, n, r) { this.factory = t, this.resolving = !1, this.canSeeViewProviders = n, this.injectImpl = r } } function es(e, t, n) { let r = 0; for (; r < n.length;) { const o = n[r]; if ("number" == typeof o) { if (0 !== o) break; r++; const i = n[r++], s = n[r++], a = n[r++]; e.setAttribute(t, s, a, i) } else { const i = o, s = n[++r]; Bl(i) ? e.setProperty(t, i, s) : e.setAttribute(t, i, s), r++ } } return r } function jl(e) { return 3 === e || 4 === e || 6 === e } function Bl(e) { return 64 === e.charCodeAt(0) } function sr(e, t) { if (null !== t && 0 !== t.length) if (null === e || 0 === e.length) e = t.slice(); else { let n = -1; for (let r = 0; r < t.length; r++) { const o = t[r]; "number" == typeof o ? n = o : 0 === n || Vl(e, n, o, null, -1 === n || 2 === n ? t[++r] : null) } } return e } function Vl(e, t, n, r, o) { let i = 0, s = e.length; if (-1 === t) s = -1; else for (; i < e.length;) { const a = e[i++]; if ("number" == typeof a) { if (a === t) { s = -1; break } if (a > t) { s = i - 1; break } } } for (; i < e.length;) { const a = e[i]; if ("number" == typeof a) break; if (a === n) { if (null === r) return void (null !== o && (e[i + 1] = o)); if (r === e[i + 1]) return void (e[i + 2] = o) } i++, null !== r && i++, null !== o && i++ } -1 !== s && (e.splice(s, 0, t), i = s + 1), e.splice(i++, 0, n), null !== r && e.splice(i++, 0, r), null !== o && e.splice(i++, 0, o) } function lo(e) { return 32767 & e } function co(e, t) { let n = function Ry(e) { return e >> 16 }(e), r = t; for (; n > 0;)r = r[on], n--; return r } let ts = !0; function fo(e) { const t = ts; return ts = e, t } const $l = 255, Ul = 5; let Ly = 0; const ut = {}; function ho(e, t) { const n = Gl(e, t); if (-1 !== n) return n; const r = t[w]; r.firstCreatePass && (e.injectorIndex = t.length, ns(r.data, e), ns(t, null), ns(r.blueprint, null)); const o = rs(e, t), i = e.injectorIndex; if (function Hl(e) { return e !== cn }(o)) { const s = lo(o), a = co(o, t), u = a[w].data; for (let l = 0; l < 8; l++)t[i + l] = a[s + l] | u[s + l] } return t[i + 8] = o, i } function ns(e, t) { e.push(0, 0, 0, 0, 0, 0, 0, 0, t) } function Gl(e, t) { return -1 === e.injectorIndex || e.parent && e.parent.injectorIndex === e.injectorIndex || null === t[e.injectorIndex + 8] ? -1 : e.injectorIndex } function rs(e, t) { if (e.parent && -1 !== e.parent.injectorIndex) return e.parent.injectorIndex; let n = 0, r = null, o = t; for (; null !== o;) { if (r = Kl(o), null === r) return cn; if (n++, o = o[on], -1 !== r.injectorIndex) return r.injectorIndex | n << 16 } return cn } function os(e, t, n) { !function ky(e, t, n) { let r; "string" == typeof n ? r = n.charCodeAt(0) || 0 : n.hasOwnProperty(Kn) && (r = n[Kn]), null == r && (r = n[Kn] = Ly++); const o = r & $l; t.data[e + (o >> Ul)] |= 1 << o }(e, t, n) } function zl(e, t, n) { if (n & T.Optional || void 0 !== e) return e; zr() } function Wl(e, t, n, r) { if (n & T.Optional && void 0 === r && (r = null), !(n & (T.Self | T.Host))) { const o = e[Xr], i = He(void 0); try { return o ? o.get(t, r, n & T.Optional) : sl(t, r, n & T.Optional) } finally { He(i) } } return zl(r, 0, n) } function ql(e, t, n, r = T.Default, o) { if (null !== e) { if (1024 & t[x]) { const s = function Uy(e, t, n, r, o) { let i = e, s = t; for (; null !== i && null !== s && 1024 & s[x] && !(256 & s[x]);) { const a = Yl(i, s, n, r | T.Self, ut); if (a !== ut) return a; let u = i.parent; if (!u) { const l = s[pl]; if (l) { const c = l.get(n, ut, r); if (c !== ut) return c } u = Kl(s), s = s[on] } i = u } return o }(e, t, n, r, ut); if (s !== ut) return s } const i = Yl(e, t, n, r, ut); if (i !== ut) return i } return Wl(t, n, r, o) } function Yl(e, t, n, r, o) { const i = function Vy(e) { if ("string" == typeof e) return e.charCodeAt(0) || 0; const t = e.hasOwnProperty(Kn) ? e[Kn] : void 0; return "number" == typeof t ? t >= 0 ? t & $l : Hy : t }(n); if ("function" == typeof i) { if (!xl(t, e, r)) return r & T.Host ? zl(o, 0, r) : Wl(t, n, r, o); try { const s = i(r); if (null != s || r & T.Optional) return s; zr() } finally { Ll() } } else if ("number" == typeof i) { let s = null, a = Gl(e, t), u = cn, l = r & T.Host ? t[me][ge] : null; for ((-1 === a || r & T.SkipSelf) && (u = -1 === a ? rs(e, t) : t[a + 8], u !== cn && Ql(r, !1) ? (s = t[w], a = lo(u), t = co(u, t)) : a = -1); -1 !== a;) { const c = t[w]; if (Zl(i, a, c.data)) { const d = By(a, t, n, s, r, l); if (d !== ut) return d } u = t[a + 8], u !== cn && Ql(r, t[w].data[a + 8] === l) && Zl(i, a, t) ? (s = c, a = lo(u), t = co(u, t)) : a = -1 } } return o } function By(e, t, n, r, o, i) { const s = t[w], a = s.data[e + 8], c = function po(e, t, n, r, o) { const i = e.providerIndexes, s = t.data, a = 1048575 & i, u = e.directiveStart, c = i >> 20, f = o ? a + c : e.directiveEnd; for (let h = r ? a : a + c; h < f; h++) { const p = s[h]; if (h < u && n === p || h >= u && p.type === n) return h } if (o) { const h = s[u]; if (h && Qe(h) && h.type === n) return u } return null }(a, s, n, null == r ? rr(a) && ts : r != s && 0 != (3 & a.type), o & T.Host && i === a); return null !== c ? zt(t, s, c, a) : ut } function zt(e, t, n, r) { let o = e[n]; const i = t.data; if (function xy(e) { return e instanceof ir }(o)) { const s = o; s.resolving && function xm(e, t) { const n = t ? `. Dependency path: ${t.join(" > ")} > ${e}` : ""; throw new C(-200, `Circular dependency in DI detected for ${e}${n}`) }(function $(e) { return "function" == typeof e ? e.name || e.toString() : "object" == typeof e && null != e && "function" == typeof e.type ? e.type.name || e.type.toString() : A(e) }(i[n])); const a = fo(s.canSeeViewProviders); s.resolving = !0; const u = s.injectImpl ? He(s.injectImpl) : null; xl(e, r, T.Default); try { o = e[n] = s.factory(void 0, i, e, r), t.firstCreatePass && n >= r.directiveStart && function Ny(e, t, n) { const { ngOnChanges: r, ngOnInit: o, ngDoCheck: i } = t.type.prototype; if (r) { const s = Dl(t); (n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, s), (n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])).push(e, s) } o && (n.preOrderHooks ?? (n.preOrderHooks = [])).push(0 - e, o), i && ((n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, i), (n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])).push(e, i)) }(n, i[n], t) } finally { null !== u && He(u), fo(a), s.resolving = !1, Ll() } } return o } function Zl(e, t, n) { return !!(n[t + (e >> Ul)] & 1 << e) } function Ql(e, t) { return !(e & T.Self || e & T.Host && t) } class dn { constructor(t, n) { this._tNode = t, this._lView = n } get(t, n, r) { return ql(this._tNode, this._lView, t, Zr(r), n) } } function Hy() { return new dn(he(), y()) } function Kl(e) { const t = e[w], n = t.type; return 2 === n ? t.declTNode : 1 === n ? e[ge] : null } const hn = "__parameters__"; function gn(e, t, n) { return pt(() => { const r = function as(e) { return function (...n) { if (e) { const r = e(...n); for (const o in r) this[o] = r[o] } } }(t); function o(...i) { if (this instanceof o) return r.apply(this, i), this; const s = new o(...i); return a.annotation = s, a; function a(u, l, c) { const d = u.hasOwnProperty(hn) ? u[hn] : Object.defineProperty(u, hn, { value: [] })[hn]; for (; d.length <= c;)d.push(null); return (d[c] = d[c] || []).push(s), u } } return n && (o.prototype = Object.create(n.prototype)), o.prototype.ngMetadataName = e, o.annotationCls = o, o }) } class R { constructor(t, n) { this._desc = t, this.ngMetadataName = "InjectionToken", this.\u0275prov = void 0, "number" == typeof n ? this.__NG_ELEMENT_ID__ = n : void 0 !== n && (this.\u0275prov = Q({ token: this, providedIn: n.providedIn || "root", factory: n.factory })) } get multi() { return this } toString() { return `InjectionToken ${this._desc}` } } function Wt(e, t) { e.forEach(n => Array.isArray(n) ? Wt(n, t) : t(n)) } function go(e, t) { return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0] } const yo = Qn(gn("Optional"), 8), Do = Qn(gn("SkipSelf"), 4); var Ae = (() => ((Ae = Ae || {})[Ae.Important = 1] = "Important", Ae[Ae.DashCase = 2] = "DashCase", Ae))(); const gs = new Map; let gD = 0; const ys = "__ngContext__"; function ye(e, t) { Oe(t) ? (e[ys] = t[nr], function yD(e) { gs.set(e[nr], e) }(t)) : e[ys] = t } let Ds; function vs(e, t) { return Ds(e, t) } function hr(e) { const t = e[ee]; return Ze(t) ? t[ee] : t } function _s(e) { return _c(e[er]) } function ws(e) { return _c(e[Ye]) } function _c(e) { for (; null !== e && !Ze(e);)e = e[Ye]; return e } function Dn(e, t, n, r, o) { if (null != r) { let i, s = !1; Ze(r) ? i = r : Oe(r) && (s = !0, r = r[yt]); const a = fe(r); 0 === e && null !== n ? null == o ? Mc(t, n, a) : qt(t, n, a, o || null, !0) : 1 === e && null !== n ? qt(t, n, a, o || null, !0) : 2 === e ? function Ts(e, t, n) { const r = function wo(e, t) { return e.parentNode(t) }(e, t); r && function kD(e, t, n, r) { e.removeChild(t, n, r) }(e, r, t, n) }(t, a, s) : 3 === e && t.destroyNode(a), null != i && function VD(e, t, n, r, o) { const i = n[eo]; i !== fe(n) && Dn(t, e, r, i, o); for (let a = _e; a < n.length; a++) { const u = n[a]; pr(u[w], u, e, t, r, i) } }(t, e, i, n, o) } } function Cs(e, t, n) { return e.createElement(t, n) } function Ec(e, t) { const n = e[an], r = n.indexOf(t), o = t[ee]; 512 & t[x] && (t[x] &= -513, Gi(o, -1)), n.splice(r, 1) } function Is(e, t) { if (!(128 & t[x])) { t[x] &= -65, t[x] |= 128, function LD(e, t) { let n; if (null != e && null != (n = e.destroyHooks)) for (let r = 0; r < n.length; r += 2) { const o = t[n[r]]; if (!(o instanceof ir)) { const i = n[r + 1]; if (Array.isArray(i)) for (let s = 0; s < i.length; s += 2) { const a = o[i[s]], u = i[s + 1]; Ue(4, a, u); try { u.call(a) } finally { Ue(5, a, u) } } else { Ue(4, o, i); try { i.call(o) } finally { Ue(5, o, i) } } } } }(e, t), function RD(e, t) { const n = e.cleanup, r = t[rn]; let o = -1; if (null !== n) for (let i = 0; i < n.length - 1; i += 2)if ("string" == typeof n[i]) { const s = n[i + 3]; s >= 0 ? r[o = s]() : r[o = -s].unsubscribe(), i += 2 } else { const s = r[o = n[i + 1]]; n[i].call(s) } if (null !== r) { for (let i = o + 1; i < r.length; i++)(0, r[i])(); t[rn] = null } }(e, t), 1 === t[w].type && t[O].destroy(); const n = t[tr]; if (null !== n && Ze(t[ee])) { n !== t[ee] && Ec(n, t); const r = t[st]; null !== r && r.detachView(e) } !function DD(e) { gs.delete(e[nr]) }(t) } } function bc(e, t, n) { return function Ic(e, t, n) { let r = t; for (; null !== r && 40 & r.type;)r = (t = r).parent; if (null === r) return n[yt]; { const { componentOffset: o } = r; if (o > -1) { const { encapsulation: i } = e.data[r.directiveStart + o]; if (i === it.None || i === it.Emulated) return null } return Re(r, n) } }(e, t.parent, n) } function qt(e, t, n, r, o) { e.insertBefore(t, n, r, o) } function Mc(e, t, n) { e.appendChild(t, n) } function Sc(e, t, n, r, o) { null !== r ? qt(e, t, n, r, o) : Mc(e, t, n) } let Ms, Ps, Nc = function Ac(e, t, n) { return 40 & e.type ? Re(e, n) : null }; function Eo(e, t, n, r) { const o = bc(e, r, t), i = t[O], a = function Tc(e, t, n) { return Nc(e, t, n) }(r.parent || t[ge], r, t); if (null != o) if (Array.isArray(n)) for (let u = 0; u < n.length; u++)Sc(i, o, n[u], a, !1); else Sc(i, o, n, a, !1); void 0 !== Ms && Ms(i, r, t, n, o) } function xc(e, t) { return null !== t ? e[me][ge].projection[t.projection] : null } function As(e, t, n, r, o, i, s) { for (; null != n;) { const a = r[n.index], u = n.type; if (s && 0 === t && (a && ye(fe(a), r), n.flags |= 2), 32 != (32 & n.flags)) if (8 & u) As(e, t, n.child, r, o, i, !1), Dn(t, e, o, a, i); else if (32 & u) { const l = vs(n, r); let c; for (; c = l();)Dn(t, e, o, c, i); Dn(t, e, o, a, i) } else 16 & u ? Fc(e, t, r, n, o, i) : Dn(t, e, o, a, i); n = s ? n.projectionNext : n.next } } function pr(e, t, n, r, o, i) { As(n, r, e.firstChild, t, o, i, !1) } function Fc(e, t, n, r, o, i) { const s = n[me], u = s[ge].projection[r.projection]; if (Array.isArray(u)) for (let l = 0; l < u.length; l++)Dn(t, e, o, u[l], i); else As(e, t, u, s[ee], o, i, !0) } function Oc(e, t, n) { "" === n ? e.removeAttribute(t, "class") : e.setAttribute(t, "class", n) } function Rc(e, t, n) { const { mergedAttrs: r, classes: o, styles: i } = n; null !== r && es(e, t, r), null !== o && Oc(e, t, o), null !== i && function $D(e, t, n) { e.setAttribute(t, "style", n) }(e, t, i) } const Zc = new R("ENVIRONMENT_INITIALIZER"), Qc = new R("INJECTOR", -1), Kc = new R("INJECTOR_DEF_TYPES"); class Xc { get(t, n = Yn) { if (n === Yn) { const r = new Error(`NullInjectorError: No provider for ${W(t)}!`); throw r.name = "NullInjectorError", r } return n } } function mv(...e) { return { \u0275providers: Jc(0, e), \u0275fromNgModule: !0 } } function Jc(e, ...t) { const n = [], r = new Set; let o; return Wt(t, i => { const s = i; ks(s, n, [], r) && (o || (o = []), o.push(s)) }), void 0 !== o && ed(o, n), n } function ed(e, t) { for (let n = 0; n < e.length; n++) { const { providers: o } = e[n]; js(o, i => { t.push(i) }) } } function ks(e, t, n, r) { if (!(e = M(e))) return !1; let o = null, i = ol(e); const s = !i && G(e); if (i || s) { if (s && !s.standalone) return !1; o = e } else { const u = e.ngModule; if (i = ol(u), !i) return !1; o = u } const a = r.has(o); if (s) { if (a) return !1; if (r.add(o), s.dependencies) { const u = "function" == typeof s.dependencies ? s.dependencies() : s.dependencies; for (const l of u) ks(l, t, n, r) } } else { if (!i) return !1; { if (null != i.imports && !a) { let l; r.add(o); try { Wt(i.imports, c => { ks(c, t, n, r) && (l || (l = []), l.push(c)) }) } finally { } void 0 !== l && ed(l, t) } if (!a) { const l = Ut(o) || (() => new o); t.push({ provide: o, useFactory: l, deps: V }, { provide: Kc, useValue: o, multi: !0 }, { provide: Zc, useValue: () => B(o), multi: !0 }) } const u = i.providers; null == u || a || js(u, c => { t.push(c) }) } } return o !== e && void 0 !== e.providers } function js(e, t) { for (let n of e) xi(n) && (n = n.\u0275providers), Array.isArray(n) ? js(n, t) : t(n) } const yv = z({ provide: String, useValue: z }); function Bs(e) { return null !== e && "object" == typeof e && yv in e } function Yt(e) { return "function" == typeof e } const Vs = new R("Set Injector scope."), So = {}, vv = {}; let Hs; function To() { return void 0 === Hs && (Hs = new Xc), Hs } class _n { } class rd extends _n { get destroyed() { return this._destroyed } constructor(t, n, r, o) { super(), this.parent = n, this.source = r, this.scopes = o, this.records = new Map, this._ngOnDestroyHooks = new Set, this._onDestroyHooks = [], this._destroyed = !1, Us(t, s => this.processProvider(s)), this.records.set(Qc, wn(void 0, this)), o.has("environment") && this.records.set(_n, wn(void 0, this)); const i = this.records.get(Vs); null != i && "string" == typeof i.value && this.scopes.add(i.value), this.injectorDefTypes = new Set(this.get(Kc.multi, V, T.Self)) } destroy() { this.assertNotDestroyed(), this._destroyed = !0; try { for (const t of this._ngOnDestroyHooks) t.ngOnDestroy(); for (const t of this._onDestroyHooks) t() } finally { this.records.clear(), this._ngOnDestroyHooks.clear(), this.injectorDefTypes.clear(), this._onDestroyHooks.length = 0 } } onDestroy(t) { this._onDestroyHooks.push(t) } runInContext(t) { this.assertNotDestroyed(); const n = nn(this), r = He(void 0); try { return t() } finally { nn(n), He(r) } } get(t, n = Yn, r = T.Default) { this.assertNotDestroyed(), r = Zr(r); const o = nn(this), i = He(void 0); try { if (!(r & T.SkipSelf)) { let a = this.records.get(t); if (void 0 === a) { const u = function bv(e) { return "function" == typeof e || "object" == typeof e && e instanceof R }(t) && Wr(t); a = u && this.injectableDefInScope(u) ? wn($s(t), So) : null, this.records.set(t, a) } if (null != a) return this.hydrate(t, a) } return (r & T.Self ? To() : this.parent).get(t, n = r & T.Optional && n === Yn ? null : n) } catch (s) { if ("NullInjectorError" === s.name) { if ((s[Yr] = s[Yr] || []).unshift(W(t)), o) throw s; return function Wm(e, t, n, r) { const o = e[Yr]; throw t[al] && o.unshift(t[al]), e.message = function qm(e, t, n, r = null) { e = e && "\n" === e.charAt(0) && e.charAt(1) == $m ? e.slice(2) : e; let o = W(t); if (Array.isArray(t)) o = t.map(W).join(" -> "); else if ("object" == typeof t) { let i = []; for (let s in t) if (t.hasOwnProperty(s)) { let a = t[s]; i.push(s + ":" + ("string" == typeof a ? JSON.stringify(a) : W(a))) } o = `{${i.join(", ")}}` } return `${n}${r ? "(" + r + ")" : ""}[${o}]: ${e.replace(Hm, "\n  ")}` }("\n" + e.message, o, n, r), e[Vm] = o, e[Yr] = null, e }(s, t, "R3InjectorError", this.source) } throw s } finally { He(i), nn(o) } } resolveInjectorInitializers() { const t = nn(this), n = He(void 0); try { const r = this.get(Zc.multi, V, T.Self); for (const o of r) o() } finally { nn(t), He(n) } } toString() { const t = [], n = this.records; for (const r of n.keys()) t.push(W(r)); return `R3Injector[${t.join(", ")}]` } assertNotDestroyed() { if (this._destroyed) throw new C(205, !1) } processProvider(t) { let n = Yt(t = M(t)) ? t : M(t && t.provide); const r = function wv(e) { return Bs(e) ? wn(void 0, e.useValue) : wn(function od(e, t, n) { let r; if (Yt(e)) { const o = M(e); return Ut(o) || $s(o) } if (Bs(e)) r = () => M(e.useValue); else if (function nd(e) { return !(!e || !e.useFactory) }(e)) r = () => e.useFactory(...Li(e.deps || [])); else if (function td(e) { return !(!e || !e.useExisting) }(e)) r = () => B(M(e.useExisting)); else { const o = M(e && (e.useClass || e.provide)); if (!function Ev(e) { return !!e.deps }(e)) return Ut(o) || $s(o); r = () => new o(...Li(e.deps)) } return r }(e), So) }(t); if (Yt(t) || !0 !== t.multi) this.records.get(n); else { let o = this.records.get(n); o || (o = wn(void 0, So, !0), o.factory = () => Li(o.multi), this.records.set(n, o)), n = t, o.multi.push(t) } this.records.set(n, r) } hydrate(t, n) { return n.value === So && (n.value = vv, n.value = n.factory()), "object" == typeof n.value && n.value && function Cv(e) { return null !== e && "object" == typeof e && "function" == typeof e.ngOnDestroy }(n.value) && this._ngOnDestroyHooks.add(n.value), n.value } injectableDefInScope(t) { if (!t.providedIn) return !1; const n = M(t.providedIn); return "string" == typeof n ? "any" === n || this.scopes.has(n) : this.injectorDefTypes.has(n) } } function $s(e) { const t = Wr(e), n = null !== t ? t.factory : Ut(e); if (null !== n) return n; if (e instanceof R) throw new C(204, !1); if (e instanceof Function) return function _v(e) { const t = e.length; if (t > 0) throw function lr(e, t) { const n = []; for (let r = 0; r < e; r++)n.push(t); return n }(t, "?"), new C(204, !1); const n = function km(e) { return e && (e[qr] || e[il]) || null }(e); return null !== n ? () => n.factory(e) : () => new e }(e); throw new C(204, !1) } function wn(e, t, n = !1) { return { factory: e, value: t, multi: n ? [] : void 0 } } function Us(e, t) { for (const n of e) Array.isArray(n) ? Us(n, t) : n && xi(n) ? Us(n.\u0275providers, t) : t(n) } class Iv { } class id { } class Sv { resolveComponentFactory(t) { throw function Mv(e) { const t = Error(`No component factory found for ${W(e)}. Did you add it to @NgModule.entryComponents?`); return t.ngComponent = e, t }(t) } } let Ao = (() => { class e { } return e.NULL = new Sv, e })(); function Tv() { return En(he(), y()) } function En(e, t) { return new Cn(Re(e, t)) } let Cn = (() => { class e { constructor(n) { this.nativeElement = n } } return e.__NG_ELEMENT_ID__ = Tv, e })(); class ad { } let ud = (() => { class e { } return e.__NG_ELEMENT_ID__ = () => function Nv() { const e = y(), n = Te(he().index, e); return (Oe(n) ? n : e)[O] }(), e })(), Pv = (() => { class e { } return e.\u0275prov = Q({ token: e, providedIn: "root", factory: () => null }), e })(); class Gs { constructor(t) { this.full = t, this.major = t.split(".")[0], this.minor = t.split(".")[1], this.patch = t.split(".").slice(2).join(".") } } const xv = new Gs("15.2.10"), zs = {}, Ws = "ngOriginalError"; function qs(e) { return e[Ws] } class bn { constructor() { this._console = console } handleError(t) { const n = this._findOriginalError(t); this._console.error("ERROR", t), n && this._console.error("ORIGINAL ERROR", n) } _findOriginalError(t) { let n = t && qs(t); for (; n && qs(n);)n = qs(n); return n || null } } function cd(e, t, n) { let r = e.length; for (; ;) { const o = e.indexOf(t, n); if (-1 === o) return o; if (0 === o || e.charCodeAt(o - 1) <= 32) { const i = t.length; if (o + i === r || e.charCodeAt(o + i) <= 32) return o } n = o + 1 } } const dd = "ng-template"; function Uv(e, t, n) { let r = 0, o = !0; for (; r < e.length;) { let i = e[r++]; if ("string" == typeof i && o) { const s = e[r++]; if (n && "class" === i && -1 !== cd(s.toLowerCase(), t, 0)) return !0 } else { if (1 === i) { for (; r < e.length && "string" == typeof (i = e[r++]);)if (i.toLowerCase() === t) return !0; return !1 } "number" == typeof i && (o = !1) } } return !1 } function fd(e) { return 4 === e.type && e.value !== dd } function Gv(e, t, n) { return t === (4 !== e.type || n ? e.value : dd) } function zv(e, t, n) { let r = 4; const o = e.attrs || [], i = function Yv(e) { for (let t = 0; t < e.length; t++)if (jl(e[t])) return t; return e.length }(o); let s = !1; for (let a = 0; a < t.length; a++) { const u = t[a]; if ("number" != typeof u) { if (!s) if (4 & r) { if (r = 2 | 1 & r, "" !== u && !Gv(e, u, n) || "" === u && 1 === t.length) { if (Ke(r)) return !1; s = !0 } } else { const l = 8 & r ? u : t[++a]; if (8 & r && null !== e.attrs) { if (!Uv(e.attrs, l, n)) { if (Ke(r)) return !1; s = !0 } continue } const d = Wv(8 & r ? "class" : u, o, fd(e), n); if (-1 === d) { if (Ke(r)) return !1; s = !0; continue } if ("" !== l) { let f; f = d > i ? "" : o[d + 1].toLowerCase(); const h = 8 & r ? f : null; if (h && -1 !== cd(h, l, 0) || 2 & r && l !== f) { if (Ke(r)) return !1; s = !0 } } } } else { if (!s && !Ke(r) && !Ke(u)) return !1; if (s && Ke(u)) continue; s = !1, r = u | 1 & r } } return Ke(r) || s } function Ke(e) { return 0 == (1 & e) } function Wv(e, t, n, r) { if (null === t) return -1; let o = 0; if (r || !n) { let i = !1; for (; o < t.length;) { const s = t[o]; if (s === e) return o; if (3 === s || 6 === s) i = !0; else { if (1 === s || 2 === s) { let a = t[++o]; for (; "string" == typeof a;)a = t[++o]; continue } if (4 === s) break; if (0 === s) { o += 4; continue } } o += i ? 1 : 2 } return -1 } return function Zv(e, t) { let n = e.indexOf(4); if (n > -1) for (n++; n < e.length;) { const r = e[n]; if ("number" == typeof r) return -1; if (r === t) return n; n++ } return -1 }(t, e) } function hd(e, t, n = !1) { for (let r = 0; r < t.length; r++)if (zv(e, t[r], n)) return !0; return !1 } function pd(e, t) { return e ? ":not(" + t.trim() + ")" : t } function Kv(e) { let t = e[0], n = 1, r = 2, o = "", i = !1; for (; n < e.length;) { let s = e[n]; if ("string" == typeof s) if (2 & r) { const a = e[++n]; o += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]" } else 8 & r ? o += "." + s : 4 & r && (o += " " + s); else "" !== o && !Ke(s) && (t += pd(i, o), o = ""), r = s, i = i || !Ke(r); n++ } return "" !== o && (t += pd(i, o)), t } const P = {}; function Et(e) { gd(j(), y(), Ee() + e, !1) } function gd(e, t, n, r) { if (!r) if (3 == (3 & t[x])) { const i = e.preOrderCheckHooks; null !== i && ao(t, i, n) } else { const i = e.preOrderHooks; null !== i && uo(t, i, 0, n) } Gt(n) } function vd(e, t = null, n = null, r) { const o = _d(e, t, n, r); return o.resolveInjectorInitializers(), o } function _d(e, t = null, n = null, r, o = new Set) { const i = [n || V, mv(e)]; return r = r || ("object" == typeof e ? void 0 : W(e)), new rd(i, t || To(), r || null, o) } let Zt = (() => { class e { static create(n, r) { if (Array.isArray(n)) return vd({ name: "" }, r, n, ""); { const o = n.name ?? ""; return vd({ name: o }, n.parent, n.providers, o) } } } return e.THROW_IF_NOT_FOUND = Yn, e.NULL = new Xc, e.\u0275prov = Q({ token: e, providedIn: "any", factory: () => B(Qc) }), e.__NG_ELEMENT_ID__ = -1, e })(); function L(e, t = T.Default) { const n = y(); return null === n ? B(e, t) : ql(he(), n, M(e), t) } function Sd(e, t) { const n = e.contentQueries; if (null !== n) for (let r = 0; r < n.length; r += 2) { const i = n[r + 1]; if (-1 !== i) { const s = e.data[i]; Zi(n[r]), s.contentQueries(2, t[i], i) } } } function Po(e, t, n, r, o, i, s, a, u, l, c) { const d = t.blueprint.slice(); return d[yt] = o, d[x] = 76 | r, (null !== c || e && 1024 & e[x]) && (d[x] |= 1024), bl(d), d[ee] = d[on] = e, d[ne] = n, d[Jr] = s || e && e[Jr], d[O] = a || e && e[O], d[Vi] = u || e && e[Vi] || null, d[Xr] = l || e && e[Xr] || null, d[ge] = i, d[nr] = function mD() { return gD++ }(), d[pl] = c, d[me] = 2 == t.type ? e[me] : d, d } function Sn(e, t, n, r, o) { let i = e.data[t]; if (null === i) i = function Xs(e, t, n, r, o) { const i = Sl(), s = zi(), u = e.data[t] = function b_(e, t, n, r, o, i) { return { type: n, index: r, insertBeforeIndex: null, injectorIndex: t ? t.injectorIndex : -1, directiveStart: -1, directiveEnd: -1, directiveStylingLast: -1, componentOffset: -1, propertyBindings: null, flags: 0, providerIndexes: 0, value: o, attrs: i, mergedAttrs: null, localNames: null, initialInputs: void 0, inputs: null, outputs: null, tView: null, next: null, prev: null, projectionNext: null, child: null, parent: t, projection: null, styles: null, stylesWithoutHost: null, residualStyles: void 0, classes: null, classesWithoutHost: null, residualClasses: void 0, classBindings: 0, styleBindings: 0 } }(0, s ? i : i && i.parent, n, t, r, o); return null === e.firstChild && (e.firstChild = u), null !== i && (s ? null == i.child && null !== u.parent && (i.child = u) : null === i.next && (i.next = u, u.prev = i)), u }(e, t, n, r, o), function vy() { return N.lFrame.inI18n }() && (i.flags |= 32); else if (64 & i.type) { i.type = n, i.value = r, i.attrs = o; const s = function or() { const e = N.lFrame, t = e.currentTNode; return e.isParent ? t : t.parent }(); i.injectorIndex = null === s ? -1 : s.injectorIndex } return at(i, !0), i } function Dr(e, t, n, r) { if (0 === n) return -1; const o = t.length; for (let i = 0; i < n; i++)t.push(r), e.blueprint.push(r), e.data.push(null); return o } function Js(e, t, n) { Qi(t); try { const r = e.viewQuery; null !== r && ua(1, r, n); const o = e.template; null !== o && Td(e, t, o, 1, n), e.firstCreatePass && (e.firstCreatePass = !1), e.staticContentQueries && Sd(e, t), e.staticViewQueries && ua(2, e.viewQuery, n); const i = e.components; null !== i && function w_(e, t) { for (let n = 0; n < t.length; n++)G_(e, t[n]) }(t, i) } catch (r) { throw e.firstCreatePass && (e.incompleteFirstPass = !0, e.firstCreatePass = !1), r } finally { t[x] &= -5, Ki() } } function xo(e, t, n, r) { const o = t[x]; if (128 != (128 & o)) { Qi(t); try { bl(t), function Al(e) { return N.lFrame.bindingIndex = e }(e.bindingStartIndex), null !== n && Td(e, t, n, 2, r); const s = 3 == (3 & o); if (s) { const l = e.preOrderCheckHooks; null !== l && ao(t, l, null) } else { const l = e.preOrderHooks; null !== l && uo(t, l, 0, null), Xi(t, 0) } if (function $_(e) { for (let t = _s(e); null !== t; t = ws(t)) { if (!t[gl]) continue; const n = t[an]; for (let r = 0; r < n.length; r++) { const o = n[r]; 512 & o[x] || Gi(o[ee], 1), o[x] |= 512 } } }(t), function H_(e) { for (let t = _s(e); null !== t; t = ws(t))for (let n = _e; n < t.length; n++) { const r = t[n], o = r[w]; io(r) && xo(o, r, o.template, r[ne]) } }(t), null !== e.contentQueries && Sd(e, t), s) { const l = e.contentCheckHooks; null !== l && ao(t, l) } else { const l = e.contentHooks; null !== l && uo(t, l, 1), Xi(t, 1) } !function v_(e, t) { const n = e.hostBindingOpCodes; if (null !== n) try { for (let r = 0; r < n.length; r++) { const o = n[r]; if (o < 0) Gt(~o); else { const i = o, s = n[++r], a = n[++r]; _y(s, i), a(2, t[i]) } } } finally { Gt(-1) } }(e, t); const a = e.components; null !== a && function __(e, t) { for (let n = 0; n < t.length; n++)U_(e, t[n]) }(t, a); const u = e.viewQuery; if (null !== u && ua(2, u, r), s) { const l = e.viewCheckHooks; null !== l && ao(t, l) } else { const l = e.viewHooks; null !== l && uo(t, l, 2), Xi(t, 2) } !0 === e.firstUpdatePass && (e.firstUpdatePass = !1), t[x] &= -41, 512 & t[x] && (t[x] &= -513, Gi(t[ee], -1)) } finally { Ki() } } } function Td(e, t, n, r, o) { const i = Ee(), s = 2 & r; try { Gt(-1), s && t.length > Z && gd(e, t, Z, !1), Ue(s ? 2 : 0, o), n(r, o) } finally { Gt(i), Ue(s ? 3 : 1, o) } } function ea(e, t, n) { if ($i(t)) { const o = t.directiveEnd; for (let i = t.directiveStart; i < o; i++) { const s = e.data[i]; s.contentQueries && s.contentQueries(1, n[i], i) } } } function Ad(e) { const t = e.tView; return null === t || t.incompleteFirstPass ? e.tView = ra(1, null, e.template, e.decls, e.vars, e.directiveDefs, e.pipeDefs, e.viewQuery, e.schemas, e.consts) : t } function ra(e, t, n, r, o, i, s, a, u, l) { const c = Z + r, d = c + o, f = function E_(e, t) { const n = []; for (let r = 0; r < t; r++)n.push(r < e ? null : P); return n }(c, d), h = "function" == typeof l ? l() : l; return f[w] = { type: e, blueprint: f, template: n, queries: null, viewQuery: a, declTNode: t, data: f.slice().fill(null, c), bindingStartIndex: c, expandoStartIndex: d, hostBindingOpCodes: null, firstCreatePass: !0, firstUpdatePass: !0, staticViewQueries: !1, staticContentQueries: !1, preOrderHooks: null, preOrderCheckHooks: null, contentHooks: null, contentCheckHooks: null, viewHooks: null, viewCheckHooks: null, destroyHooks: null, cleanup: null, contentQueries: null, components: null, directiveRegistry: "function" == typeof i ? i() : i, pipeRegistry: "function" == typeof s ? s() : s, firstChild: null, schemas: u, consts: h, incompleteFirstPass: !1 } } function Pd(e, t, n, r) { for (let o in e) if (e.hasOwnProperty(o)) { n = null === n ? {} : n; const i = e[o]; null === r ? xd(n, t, o, i) : r.hasOwnProperty(o) && xd(n, t, r[o], i) } return n } function xd(e, t, n, r) { e.hasOwnProperty(n) ? e[n].push(t, r) : e[n] = [t, r] } function Fd(e, t, n, r, o, i) { for (let l = 0; l < r.length; l++)os(ho(n, t), e, r[l].type); !function L_(e, t, n) { e.flags |= 1, e.directiveStart = t, e.directiveEnd = t + n, e.providerIndexes = t }(n, e.data.length, r.length); for (let l = 0; l < r.length; l++) { const c = r[l]; c.providersResolver && c.providersResolver(c) } let s = !1, a = !1, u = Dr(e, t, r.length, null); for (let l = 0; l < r.length; l++) { const c = r[l]; n.mergedAttrs = sr(n.mergedAttrs, c.hostAttrs), k_(e, n, t, u, c), R_(u, c, o), null !== c.contentQueries && (n.flags |= 4), (null !== c.hostBindings || null !== c.hostAttrs || 0 !== c.hostVars) && (n.flags |= 64); const d = c.type.prototype; !s && (d.ngOnChanges || d.ngOnInit || d.ngDoCheck) && ((e.preOrderHooks ?? (e.preOrderHooks = [])).push(n.index), s = !0), !a && (d.ngOnChanges || d.ngDoCheck) && ((e.preOrderCheckHooks ?? (e.preOrderCheckHooks = [])).push(n.index), a = !0), u++ } !function I_(e, t, n) { const o = t.directiveEnd, i = e.data, s = t.attrs, a = []; let u = null, l = null; for (let c = t.directiveStart; c < o; c++) { const d = i[c], f = n ? n.get(d) : null, p = f ? f.outputs : null; u = Pd(d.inputs, c, u, f ? f.inputs : null), l = Pd(d.outputs, c, l, p); const g = null === u || null === s || fd(t) ? null : V_(u, c, s); a.push(g) } null !== u && (u.hasOwnProperty("class") && (t.flags |= 8), u.hasOwnProperty("style") && (t.flags |= 16)), t.initialInputs = a, t.inputs = u, t.outputs = l }(e, n, i) } function Od(e, t, n) { const r = n.directiveStart, o = n.directiveEnd, i = n.index, s = function wy() { return N.lFrame.currentDirectiveIndex }(); try { Gt(i); for (let a = r; a < o; a++) { const u = e.data[a], l = t[a]; qi(a), (null !== u.hostBindings || 0 !== u.hostVars || null !== u.hostAttrs) && x_(u, l) } } finally { Gt(-1), qi(s) } } function x_(e, t) { null !== e.hostBindings && e.hostBindings(1, t) } function ia(e, t, n) { t.componentOffset = n, (e.components ?? (e.components = [])).push(t.index) } function R_(e, t, n) { if (n) { if (t.exportAs) for (let r = 0; r < t.exportAs.length; r++)n[t.exportAs[r]] = e; Qe(t) && (n[""] = e) } } function k_(e, t, n, r, o) { e.data[r] = o; const i = o.factory || (o.factory = Ut(o.type)), s = new ir(i, Qe(o), L); e.blueprint[r] = s, n[r] = s, function A_(e, t, n, r, o) { const i = o.hostBindings; if (i) { let s = e.hostBindingOpCodes; null === s && (s = e.hostBindingOpCodes = []); const a = ~t.index; (function N_(e) { let t = e.length; for (; t > 0;) { const n = e[--t]; if ("number" == typeof n && n < 0) return n } return 0 })(s) != a && s.push(a), s.push(n, r, i) } }(e, t, r, Dr(e, n, o.hostVars, P), o) } function B_(e, t, n, r, o, i) { const s = i[t]; if (null !== s) { const a = r.setInput; for (let u = 0; u < s.length;) { const l = s[u++], c = s[u++], d = s[u++]; null !== a ? r.setInput(n, d, l, c) : n[c] = d } } } function V_(e, t, n) { let r = null, o = 0; for (; o < n.length;) { const i = n[o]; if (0 !== i) if (5 !== i) { if ("number" == typeof i) break; if (e.hasOwnProperty(i)) { null === r && (r = []); const s = e[i]; for (let a = 0; a < s.length; a += 2)if (s[a] === t) { r.push(i, s[a + 1], n[o + 1]); break } } o += 2 } else o += 2; else o += 4 } return r } function U_(e, t) { const n = Te(t, e); if (io(n)) { const r = n[w]; 48 & n[x] ? xo(r, n, r.template, n[ne]) : n[$t] > 0 && aa(n) } } function aa(e) { for (let r = _s(e); null !== r; r = ws(r))for (let o = _e; o < r.length; o++) { const i = r[o]; if (io(i)) if (512 & i[x]) { const s = i[w]; xo(s, i, s.template, i[ne]) } else i[$t] > 0 && aa(i) } const n = e[w].components; if (null !== n) for (let r = 0; r < n.length; r++) { const o = Te(n[r], e); io(o) && o[$t] > 0 && aa(o) } } function G_(e, t) { const n = Te(t, e), r = n[w]; (function z_(e, t) { for (let n = t.length; n < e.blueprint.length; n++)t.push(e.blueprint[n]) })(r, n), Js(r, n, n[ne]) } function Fo(e, t) { return e[er] ? e[hl][Ye] = t : e[er] = t, e[hl] = t, t } function Oo(e) { for (; e;) { e[x] |= 32; const t = hr(e); if (Jm(e) && !t) return e; e = t } return null } function Ro(e, t, n, r = !0) { const o = t[Jr]; o.begin && o.begin(); try { xo(e, t, e.template, n) } catch (s) { throw r && Bd(t, s), s } finally { o.end && o.end() } } function ua(e, t, n) { Zi(0), t(e, n) } function Ld(e) { return e[rn] || (e[rn] = []) } function kd(e) { return e.cleanup || (e.cleanup = []) } function Bd(e, t) { const n = e[Xr], r = n ? n.get(bn, null) : null; r && r.handleError(t) } function la(e, t, n, r, o) { for (let i = 0; i < n.length;) { const s = n[i++], a = n[i++], u = t[s], l = e.data[s]; null !== l.setInput ? l.setInput(u, o, r, a) : u[a] = o } } function Ct(e, t, n) { const r = function oo(e, t) { return fe(t[e]) }(t, e); !function wc(e, t, n) { e.setValue(t, n) }(e[O], r, n) } function Lo(e, t, n) { let r = n ? e.styles : null, o = n ? e.classes : null, i = 0; if (null !== t) for (let s = 0; s < t.length; s++) { const a = t[s]; "number" == typeof a ? i = a : 1 == i ? o = Ai(o, a) : 2 == i && (r = Ai(r, a + ": " + t[++s] + ";")) } n ? e.styles = r : e.stylesWithoutHost = r, n ? e.classes = o : e.classesWithoutHost = o } function ko(e, t, n, r, o = !1) { for (; null !== n;) { const i = t[n.index]; if (null !== i && r.push(fe(i)), Ze(i)) for (let a = _e; a < i.length; a++) { const u = i[a], l = u[w].firstChild; null !== l && ko(u[w], u, l, r) } const s = n.type; if (8 & s) ko(e, t, n.child, r); else if (32 & s) { const a = vs(n, t); let u; for (; u = a();)r.push(u) } else if (16 & s) { const a = xc(t, n); if (Array.isArray(a)) r.push(...a); else { const u = hr(t[me]); ko(u[w], u, a, r, !0) } } n = o ? n.projectionNext : n.next } return r } class vr { get rootNodes() { const t = this._lView, n = t[w]; return ko(n, t, n.firstChild, []) } constructor(t, n) { this._lView = t, this._cdRefInjectingView = n, this._appRef = null, this._attachedToViewContainer = !1 } get context() { return this._lView[ne] } set context(t) { this._lView[ne] = t } get destroyed() { return 128 == (128 & this._lView[x]) } destroy() { if (this._appRef) this._appRef.detachView(this); else if (this._attachedToViewContainer) { const t = this._lView[ee]; if (Ze(t)) { const n = t[8], r = n ? n.indexOf(this) : -1; r > -1 && (function bs(e, t) { if (e.length <= _e) return; const n = _e + t, r = e[n]; if (r) { const o = r[tr]; null !== o && o !== e && Ec(o, r), t > 0 && (e[n - 1][Ye] = r[Ye]); const i = go(e, _e + t); !function AD(e, t) { pr(e, t, t[O], 2, null, null), t[yt] = null, t[ge] = null }(r[w], r); const s = i[st]; null !== s && s.detachView(i[w]), r[ee] = null, r[Ye] = null, r[x] &= -65 } return r }(t, r), go(n, r)) } this._attachedToViewContainer = !1 } !function Cc(e, t) { if (!(128 & t[x])) { const n = t[O]; n.destroyNode && pr(e, t, n, 3, null, null), function xD(e) { let t = e[er]; if (!t) return Is(e[w], e); for (; t;) { let n = null; if (Oe(t)) n = t[er]; else { const r = t[_e]; r && (n = r) } if (!n) { for (; t && !t[Ye] && t !== e;)Oe(t) && Is(t[w], t), t = t[ee]; null === t && (t = e), Oe(t) && Is(t[w], t), n = t && t[Ye] } t = n } }(t) } }(this._lView[w], this._lView) } onDestroy(t) { !function Nd(e, t, n, r) { const o = Ld(t); null === n ? o.push(r) : (o.push(n), e.firstCreatePass && kd(e).push(r, o.length - 1)) }(this._lView[w], this._lView, null, t) } markForCheck() { Oo(this._cdRefInjectingView || this._lView) } detach() { this._lView[x] &= -65 } reattach() { this._lView[x] |= 64 } detectChanges() { Ro(this._lView[w], this._lView, this.context) } checkNoChanges() { } attachToViewContainerRef() { if (this._appRef) throw new C(902, !1); this._attachedToViewContainer = !0 } detachFromAppRef() { this._appRef = null, function PD(e, t) { pr(e, t, t[O], 2, null, null) }(this._lView[w], this._lView) } attachToAppRef(t) { if (this._attachedToViewContainer) throw new C(902, !1); this._appRef = t } } class W_ extends vr { constructor(t) { super(t), this._view = t } detectChanges() { const t = this._view; Ro(t[w], t, t[ne], !1) } checkNoChanges() { } get context() { return null } } class Vd extends Ao { constructor(t) { super(), this.ngModule = t } resolveComponentFactory(t) { const n = G(t); return new _r(n, this.ngModule) } } function Hd(e) { const t = []; for (let n in e) e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n }); return t } class Y_ { constructor(t, n) { this.injector = t, this.parentInjector = n } get(t, n, r) { r = Zr(r); const o = this.injector.get(t, zs, r); return o !== zs || n === zs ? o : this.parentInjector.get(t, n, r) } } class _r extends id { get inputs() { return Hd(this.componentDef.inputs) } get outputs() { return Hd(this.componentDef.outputs) } constructor(t, n) { super(), this.componentDef = t, this.ngModule = n, this.componentType = t.type, this.selector = function Xv(e) { return e.map(Kv).join(",") }(t.selectors), this.ngContentSelectors = t.ngContentSelectors ? t.ngContentSelectors : [], this.isBoundToModule = !!n } create(t, n, r, o) { let i = (o = o || this.ngModule) instanceof _n ? o : o?.injector; i && null !== this.componentDef.getStandaloneInjector && (i = this.componentDef.getStandaloneInjector(i) || i); const s = i ? new Y_(t, i) : t, a = s.get(ad, null); if (null === a) throw new C(407, !1); const u = s.get(Pv, null), l = a.createRenderer(null, this.componentDef), c = this.componentDef.selectors[0][0] || "div", d = r ? function C_(e, t, n) { return e.selectRootElement(t, n === it.ShadowDom) }(l, r, this.componentDef.encapsulation) : Cs(l, c, function q_(e) { const t = e.toLowerCase(); return "svg" === t ? "svg" : "math" === t ? "math" : null }(c)), f = this.componentDef.onPush ? 288 : 272, h = ra(0, null, null, 1, 0, null, null, null, null, null), p = Po(null, h, null, f, null, null, a, l, u, s, null); let g, D; Qi(p); try { const v = this.componentDef; let E, m = null; v.findHostDirectiveDefs ? (E = [], m = new Map, v.findHostDirectiveDefs(v, E, m), E.push(v)) : E = [v]; const b = function Q_(e, t) { const n = e[w], r = Z; return e[r] = t, Sn(n, r, 2, "#host", null) }(p, d), H = function K_(e, t, n, r, o, i, s, a) { const u = o[w]; !function X_(e, t, n, r) { for (const o of e) t.mergedAttrs = sr(t.mergedAttrs, o.hostAttrs); null !== t.mergedAttrs && (Lo(t, t.mergedAttrs, !0), null !== n && Rc(r, n, t)) }(r, e, t, s); const l = i.createRenderer(t, n), c = Po(o, Ad(n), null, n.onPush ? 32 : 16, o[e.index], e, i, l, a || null, null, null); return u.firstCreatePass && ia(u, e, r.length - 1), Fo(o, c), o[e.index] = c }(b, d, v, E, p, a, l); D = Cl(h, Z), d && function ew(e, t, n, r) { if (r) es(e, n, ["ng-version", xv.full]); else { const { attrs: o, classes: i } = function Jv(e) { const t = [], n = []; let r = 1, o = 2; for (; r < e.length;) { let i = e[r]; if ("string" == typeof i) 2 === o ? "" !== i && t.push(i, e[++r]) : 8 === o && n.push(i); else { if (!Ke(o)) break; o = i } r++ } return { attrs: t, classes: n } }(t.selectors[0]); o && es(e, n, o), i && i.length > 0 && Oc(e, n, i.join(" ")) } }(l, v, d, r), void 0 !== n && function tw(e, t, n) { const r = e.projection = []; for (let o = 0; o < t.length; o++) { const i = n[o]; r.push(null != i ? Array.from(i) : null) } }(D, this.ngContentSelectors, n), g = function J_(e, t, n, r, o, i) { const s = he(), a = o[w], u = Re(s, o); Fd(a, o, s, n, null, r); for (let c = 0; c < n.length; c++)ye(zt(o, a, s.directiveStart + c, s), o); Od(a, o, s), u && ye(u, o); const l = zt(o, a, s.directiveStart + s.componentOffset, s); if (e[ne] = o[ne] = l, null !== i) for (const c of i) c(l, t); return ea(a, s, e), l }(H, v, E, m, p, [nw]), Js(h, p, null) } finally { Ki() } return new Z_(this.componentType, g, En(D, p), p, D) } } class Z_ extends Iv { constructor(t, n, r, o, i) { super(), this.location = r, this._rootLView = o, this._tNode = i, this.instance = n, this.hostView = this.changeDetectorRef = new W_(o), this.componentType = t } setInput(t, n) { const r = this._tNode.inputs; let o; if (null !== r && (o = r[t])) { const i = this._rootLView; la(i[w], i, o, t, n), Oo(Te(this._tNode.index, i)) } } get injector() { return new dn(this._tNode, this._rootLView) } destroy() { this.hostView.destroy() } onDestroy(t) { this.hostView.onDestroy(t) } } function nw() { const e = he(); so(y()[w], e) } function jo(e) { return !!da(e) && (Array.isArray(e) || !(e instanceof Map) && Symbol.iterator in e) } function da(e) { return null !== e && ("function" == typeof e || "object" == typeof e) } function De(e, t, n) { return !Object.is(e[t], n) && (e[t] = n, !0) } function kn(e, t, n) { const r = y(); return De(r, ln(), t) && function ke(e, t, n, r, o, i, s, a) { const u = Re(t, n); let c, l = t.inputs; !a && null != l && (c = l[r]) ? (la(e, n, c, r, o), rr(t) && function S_(e, t) { const n = Te(t, e); 16 & n[x] || (n[x] |= 32) }(n, t.index)) : 3 & t.type && (r = function M_(e) { return "class" === e ? "className" : "for" === e ? "htmlFor" : "formaction" === e ? "formAction" : "innerHtml" === e ? "innerHTML" : "readonly" === e ? "readOnly" : "tabindex" === e ? "tabIndex" : e }(r), o = null != s ? s(o, t.value || "", r) : o, i.setProperty(u, r, o)) }(j(), function K() { const e = N.lFrame; return Cl(e.tView, e.selectedIndex) }(), r, e, t, r[O], n, !1), kn } function fa(e, t, n, r, o) { const s = o ? "class" : "style"; la(e, n, t.inputs[s], s, r) } function je(e, t, n, r) { const o = y(), i = j(), s = Z + e, a = o[O], u = i.firstCreatePass ? function _w(e, t, n, r, o, i) { const s = t.consts, u = Sn(t, e, 2, r, Ot(s, o)); return function oa(e, t, n, r) { if (Ml()) { const o = null === r ? null : { "": -1 }, i = function F_(e, t) { const n = e.directiveRegistry; let r = null, o = null; if (n) for (let i = 0; i < n.length; i++) { const s = n[i]; if (hd(t, s.selectors, !1)) if (r || (r = []), Qe(s)) if (null !== s.findHostDirectiveDefs) { const a = []; o = o || new Map, s.findHostDirectiveDefs(s, a, o), r.unshift(...a, s), ia(e, t, a.length) } else r.unshift(s), ia(e, t, 0); else o = o || new Map, s.findHostDirectiveDefs?.(s, r, o), r.push(s) } return null === r ? null : [r, o] }(e, n); let s, a; null === i ? s = a = null : [s, a] = i, null !== s && Fd(e, t, n, s, o, a), o && function O_(e, t, n) { if (t) { const r = e.localNames = []; for (let o = 0; o < t.length; o += 2) { const i = n[t[o + 1]]; if (null == i) throw new C(-301, !1); r.push(t[o], i) } } }(n, r, o) } n.mergedAttrs = sr(n.mergedAttrs, n.attrs) }(t, n, u, Ot(s, i)), null !== u.attrs && Lo(u, u.attrs, !1), null !== u.mergedAttrs && Lo(u, u.mergedAttrs, !0), null !== t.queries && t.queries.elementStart(t, u), u }(s, i, o, t, n, r) : i.data[s], l = o[s] = Cs(a, t, function Ay() { return N.lFrame.currentNamespace }()), c = no(u); return at(u, !0), Rc(a, l, u), 32 != (32 & u.flags) && Eo(i, o, l, u), 0 === function dy() { return N.lFrame.elementDepthCount }() && ye(l, o), function fy() { N.lFrame.elementDepthCount++ }(), c && (function ta(e, t, n) { Ml() && (function P_(e, t, n, r) { const o = n.directiveStart, i = n.directiveEnd; rr(n) && function j_(e, t, n) { const r = Re(t, e), o = Ad(n), i = e[Jr], s = Fo(e, Po(e, o, null, n.onPush ? 32 : 16, r, t, i, i.createRenderer(r, n), null, null, null)); e[t.index] = s }(t, n, e.data[o + n.componentOffset]), e.firstCreatePass || ho(n, t), ye(r, t); const s = n.initialInputs; for (let a = o; a < i; a++) { const u = e.data[a], l = zt(t, e, a, n); ye(l, t), null !== s && B_(0, a - o, l, u, 0, s), Qe(u) && (Te(n.index, t)[ne] = zt(t, e, a, n)) } }(e, t, n, Re(n, t)), 64 == (64 & n.flags) && Od(e, t, n)) }(i, o, u), ea(i, u, o)), null !== r && function na(e, t, n = Re) { const r = t.localNames; if (null !== r) { let o = t.index + 1; for (let i = 0; i < r.length; i += 2) { const s = r[i + 1], a = -1 === s ? n(t, e) : e[s]; e[o++] = a } } }(o, u), je } function Be() { let e = he(); zi() ? function Wi() { N.lFrame.isParent = !1 }() : (e = e.parent, at(e, !1)); const t = e; !function hy() { N.lFrame.elementDepthCount-- }(); const n = j(); return n.firstCreatePass && (so(n, e), $i(e) && n.queries.elementEnd(e)), null != t.classesWithoutHost && function Fy(e) { return 0 != (8 & e.flags) }(t) && fa(n, t, y(), t.classesWithoutHost, !0), null != t.stylesWithoutHost && function Oy(e) { return 0 != (16 & e.flags) }(t) && fa(n, t, y(), t.stylesWithoutHost, !1), Be } function jn(e, t, n, r) { return je(e, t, n, r), Be(), jn } function ga(e) { return !!e && "function" == typeof e.then } const Cw = function of(e) { return !!e && "function" == typeof e.subscribe }; function ma(e, t, n, r) { const o = y(), i = j(), s = he(); return function af(e, t, n, r, o, i, s) { const a = no(r), l = e.firstCreatePass && kd(e), c = t[ne], d = Ld(t); let f = !0; if (3 & r.type || s) { const g = Re(r, t), D = s ? s(g) : g, v = d.length, E = s ? b => s(fe(b[r.index])) : r.index; let m = null; if (!s && a && (m = function bw(e, t, n, r) { const o = e.cleanup; if (null != o) for (let i = 0; i < o.length - 1; i += 2) { const s = o[i]; if (s === n && o[i + 1] === r) { const a = t[rn], u = o[i + 2]; return a.length > u ? a[u] : null } "string" == typeof s && (i += 2) } return null }(e, t, o, r.index)), null !== m) (m.__ngLastListenerFn__ || m).__ngNextListenerFn__ = i, m.__ngLastListenerFn__ = i, f = !1; else { i = lf(r, t, c, i, !1); const b = n.listen(D, o, i); d.push(i, b), l && l.push(o, E, v, v + 1) } } else i = lf(r, t, c, i, !1); const h = r.outputs; let p; if (f && null !== h && (p = h[o])) { const g = p.length; if (g) for (let D = 0; D < g; D += 2) { const H = t[p[D]][p[D + 1]].subscribe(i), ie = d.length; d.push(i, H), l && l.push(o, r.index, ie, -(ie + 1)) } } }(i, o, o[O], s, e, t, r), ma } function uf(e, t, n, r) { try { return Ue(6, t, n), !1 !== n(r) } catch (o) { return Bd(e, o), !1 } finally { Ue(7, t, n) } } function lf(e, t, n, r, o) { return function i(s) { if (s === Function) return r; Oo(e.componentOffset > -1 ? Te(e.index, t) : t); let u = uf(t, n, r, s), l = i.__ngNextListenerFn__; for (; l;)u = uf(t, n, l, s) && u, l = l.__ngNextListenerFn__; return o && !1 === u && (s.preventDefault(), s.returnValue = !1), u } } function kt(e, t = "") { const n = y(), r = j(), o = e + Z, i = r.firstCreatePass ? Sn(r, o, 1, t, null) : r.data[o], s = n[o] = function Es(e, t) { return e.createText(t) }(n[O], t); Eo(r, n, s, i), at(i, !1) } function Xt(e) { return Ea("", e, ""), Xt } function Ea(e, t, n) { const r = y(), o = function An(e, t, n, r) { return De(e, ln(), n) ? t + A(n) + r : P }(r, e, t, n); return o !== P && Ct(r, Ee(), o), Ea } const Hn = "en-US"; let th = Hn; class $n { } class mC { } class Sh extends $n { constructor(t, n) { super(), this._parent = n, this._bootstrapComponents = [], this.destroyCbs = [], this.componentFactoryResolver = new Vd(this); const r = function Fe(e, t) { const n = e[ll] || null; if (!n && !0 === t) throw new Error(`Type ${W(e)} does not have '\u0275mod' property.`); return n }(t); this._bootstrapComponents = function wt(e) { return e instanceof Function ? e() : e }(r.bootstrap), this._r3Injector = _d(t, n, [{ provide: $n, useValue: this }, { provide: Ao, useValue: this.componentFactoryResolver }], W(t), new Set(["environment"])), this._r3Injector.resolveInjectorInitializers(), this.instance = this._r3Injector.get(t) } get injector() { return this._r3Injector } destroy() { const t = this._r3Injector; !t.destroyed && t.destroy(), this.destroyCbs.forEach(n => n()), this.destroyCbs = null } onDestroy(t) { this.destroyCbs.push(t) } } class Aa extends mC { constructor(t) { super(), this.moduleType = t } create(t) { return new Sh(this.moduleType, t) } } function Pa(e) { return t => { setTimeout(e, void 0, t) } } const bt = class WC extends wi { constructor(t = !1) { super(), this.__isAsync = t } emit(t) { super.next(t) } subscribe(t, n, r) { let o = t, i = n || (() => null), s = r; if (t && "object" == typeof t) { const u = t; o = u.next?.bind(u), i = u.error?.bind(u), s = u.complete?.bind(u) } this.__isAsync && (i = Pa(i), o && (o = Pa(o)), s && (s = Pa(s))); const a = super.subscribe({ next: o, error: i, complete: s }); return t instanceof rt && t.add(a), a } }; function Yo(...e) { } const fp = new R("Application Initializer"); let Zo = (() => { class e { constructor(n) { this.appInits = n, this.resolve = Yo, this.reject = Yo, this.initialized = !1, this.done = !1, this.donePromise = new Promise((r, o) => { this.resolve = r, this.reject = o }) } runInitializers() { if (this.initialized) return; const n = [], r = () => { this.done = !0, this.resolve() }; if (this.appInits) for (let o = 0; o < this.appInits.length; o++) { const i = this.appInits[o](); if (ga(i)) n.push(i); else if (Cw(i)) { const s = new Promise((a, u) => { i.subscribe({ complete: a, error: u }) }); n.push(s) } } Promise.all(n).then(() => { r() }).catch(o => { this.reject(o) }), 0 === n.length && r(), this.initialized = !0 } } return e.\u0275fac = function (n) { return new (n || e)(B(fp, 8)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); const Pr = new R("AppId", { providedIn: "root", factory: function hp() { return `${Ua()}${Ua()}${Ua()}` } }); function Ua() { return String.fromCharCode(97 + Math.floor(25 * Math.random())) } const pp = new R("Platform Initializer"), gp = new R("Platform ID", { providedIn: "platform", factory: () => "unknown" }), Mt = new R("LocaleId", { providedIn: "root", factory: () => function Gm(e, t = T.Default) { return B(e, Zr(t)) }(Mt, T.Optional | T.SkipSelf) || function Ab() { return typeof $localize < "u" && $localize.locale || Hn }() }), Ob = (() => Promise.resolve(0))(); function Ga(e) { typeof Zone > "u" ? Ob.then(() => { e && e.apply(null, null) }) : Zone.current.scheduleMicroTask("scheduleMicrotask", e) } class ve { constructor({ enableLongStackTrace: t = !1, shouldCoalesceEventChangeDetection: n = !1, shouldCoalesceRunChangeDetection: r = !1 }) { if (this.hasPendingMacrotasks = !1, this.hasPendingMicrotasks = !1, this.isStable = !0, this.onUnstable = new bt(!1), this.onMicrotaskEmpty = new bt(!1), this.onStable = new bt(!1), this.onError = new bt(!1), typeof Zone > "u") throw new C(908, !1); Zone.assertZonePatched(); const o = this; o._nesting = 0, o._outer = o._inner = Zone.current, Zone.TaskTrackingZoneSpec && (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec)), t && Zone.longStackTraceZoneSpec && (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)), o.shouldCoalesceEventChangeDetection = !r && n, o.shouldCoalesceRunChangeDetection = r, o.lastRequestAnimationFrameId = -1, o.nativeRequestAnimationFrame = function Rb() { let e = Y.requestAnimationFrame, t = Y.cancelAnimationFrame; if (typeof Zone < "u" && e && t) { const n = e[Zone.__symbol__("OriginalDelegate")]; n && (e = n); const r = t[Zone.__symbol__("OriginalDelegate")]; r && (t = r) } return { nativeRequestAnimationFrame: e, nativeCancelAnimationFrame: t } }().nativeRequestAnimationFrame, function jb(e) { const t = () => { !function kb(e) { e.isCheckStableRunning || -1 !== e.lastRequestAnimationFrameId || (e.lastRequestAnimationFrameId = e.nativeRequestAnimationFrame.call(Y, () => { e.fakeTopEventTask || (e.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => { e.lastRequestAnimationFrameId = -1, Wa(e), e.isCheckStableRunning = !0, za(e), e.isCheckStableRunning = !1 }, void 0, () => { }, () => { })), e.fakeTopEventTask.invoke() }), Wa(e)) }(e) }; e._inner = e._inner.fork({ name: "angular", properties: { isAngularZone: !0 }, onInvokeTask: (n, r, o, i, s, a) => { try { return Dp(e), n.invokeTask(o, i, s, a) } finally { (e.shouldCoalesceEventChangeDetection && "eventTask" === i.type || e.shouldCoalesceRunChangeDetection) && t(), vp(e) } }, onInvoke: (n, r, o, i, s, a, u) => { try { return Dp(e), n.invoke(o, i, s, a, u) } finally { e.shouldCoalesceRunChangeDetection && t(), vp(e) } }, onHasTask: (n, r, o, i) => { n.hasTask(o, i), r === o && ("microTask" == i.change ? (e._hasPendingMicrotasks = i.microTask, Wa(e), za(e)) : "macroTask" == i.change && (e.hasPendingMacrotasks = i.macroTask)) }, onHandleError: (n, r, o, i) => (n.handleError(o, i), e.runOutsideAngular(() => e.onError.emit(i)), !1) }) }(o) } static isInAngularZone() { return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone") } static assertInAngularZone() { if (!ve.isInAngularZone()) throw new C(909, !1) } static assertNotInAngularZone() { if (ve.isInAngularZone()) throw new C(909, !1) } run(t, n, r) { return this._inner.run(t, n, r) } runTask(t, n, r, o) { const i = this._inner, s = i.scheduleEventTask("NgZoneEvent: " + o, t, Lb, Yo, Yo); try { return i.runTask(s, n, r) } finally { i.cancelTask(s) } } runGuarded(t, n, r) { return this._inner.runGuarded(t, n, r) } runOutsideAngular(t) { return this._outer.run(t) } } const Lb = {}; function za(e) { if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable) try { e._nesting++, e.onMicrotaskEmpty.emit(null) } finally { if (e._nesting--, !e.hasPendingMicrotasks) try { e.runOutsideAngular(() => e.onStable.emit(null)) } finally { e.isStable = !0 } } } function Wa(e) { e.hasPendingMicrotasks = !!(e._hasPendingMicrotasks || (e.shouldCoalesceEventChangeDetection || e.shouldCoalesceRunChangeDetection) && -1 !== e.lastRequestAnimationFrameId) } function Dp(e) { e._nesting++, e.isStable && (e.isStable = !1, e.onUnstable.emit(null)) } function vp(e) { e._nesting--, za(e) } class Bb { constructor() { this.hasPendingMicrotasks = !1, this.hasPendingMacrotasks = !1, this.isStable = !0, this.onUnstable = new bt, this.onMicrotaskEmpty = new bt, this.onStable = new bt, this.onError = new bt } run(t, n, r) { return t.apply(n, r) } runGuarded(t, n, r) { return t.apply(n, r) } runOutsideAngular(t) { return t() } runTask(t, n, r, o) { return t.apply(n, r) } } const _p = new R(""), Qo = new R(""); let Za, qa = (() => { class e { constructor(n, r, o) { this._ngZone = n, this.registry = r, this._pendingCount = 0, this._isZoneStable = !0, this._didWork = !1, this._callbacks = [], this.taskTrackingZone = null, Za || (function Vb(e) { Za = e }(o), o.addToWindow(r)), this._watchAngularEvents(), n.run(() => { this.taskTrackingZone = typeof Zone > "u" ? null : Zone.current.get("TaskTrackingZone") }) } _watchAngularEvents() { this._ngZone.onUnstable.subscribe({ next: () => { this._didWork = !0, this._isZoneStable = !1 } }), this._ngZone.runOutsideAngular(() => { this._ngZone.onStable.subscribe({ next: () => { ve.assertNotInAngularZone(), Ga(() => { this._isZoneStable = !0, this._runCallbacksIfReady() }) } }) }) } increasePendingRequestCount() { return this._pendingCount += 1, this._didWork = !0, this._pendingCount } decreasePendingRequestCount() { if (this._pendingCount -= 1, this._pendingCount < 0) throw new Error("pending async requests below zero"); return this._runCallbacksIfReady(), this._pendingCount } isStable() { return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks } _runCallbacksIfReady() { if (this.isStable()) Ga(() => { for (; 0 !== this._callbacks.length;) { let n = this._callbacks.pop(); clearTimeout(n.timeoutId), n.doneCb(this._didWork) } this._didWork = !1 }); else { let n = this.getPendingTasks(); this._callbacks = this._callbacks.filter(r => !r.updateCb || !r.updateCb(n) || (clearTimeout(r.timeoutId), !1)), this._didWork = !0 } } getPendingTasks() { return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(n => ({ source: n.source, creationLocation: n.creationLocation, data: n.data })) : [] } addCallback(n, r, o) { let i = -1; r && r > 0 && (i = setTimeout(() => { this._callbacks = this._callbacks.filter(s => s.timeoutId !== i), n(this._didWork, this.getPendingTasks()) }, r)), this._callbacks.push({ doneCb: n, timeoutId: i, updateCb: o }) } whenStable(n, r, o) { if (o && !this.taskTrackingZone) throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'); this.addCallback(n, r, o), this._runCallbacksIfReady() } getPendingRequestCount() { return this._pendingCount } registerApplication(n) { this.registry.registerApplication(n, this) } unregisterApplication(n) { this.registry.unregisterApplication(n) } findProviders(n, r, o) { return [] } } return e.\u0275fac = function (n) { return new (n || e)(B(ve), B(Ya), B(Qo)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac }), e })(), Ya = (() => { class e { constructor() { this._applications = new Map } registerApplication(n, r) { this._applications.set(n, r) } unregisterApplication(n) { this._applications.delete(n) } unregisterAllApplications() { this._applications.clear() } getTestability(n) { return this._applications.get(n) || null } getAllTestabilities() { return Array.from(this._applications.values()) } getAllRootElements() { return Array.from(this._applications.keys()) } findTestabilityInTree(n, r = !0) { return Za?.findTestabilityInTree(this, n, r) ?? null } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac, providedIn: "platform" }), e })(); const St = !1; let jt = null; const wp = new R("AllowMultipleToken"), Qa = new R("PlatformDestroyListeners"), Hb = new R("appBootstrapListener"); function Cp(e, t, n = []) { const r = `Platform: ${t}`, o = new R(r); return (i = []) => { let s = Ka(); if (!s || s.injector.get(wp, !1)) { const a = [...n, ...i, { provide: o, useValue: !0 }]; e ? e(a) : function Gb(e) { if (jt && !jt.get(wp, !1)) throw new C(400, !1); jt = e; const t = e.get(Ip); (function Ep(e) { const t = e.get(pp, null); t && t.forEach(n => n()) })(e) }(function bp(e = [], t) { return Zt.create({ name: t, providers: [{ provide: Vs, useValue: "platform" }, { provide: Qa, useValue: new Set([() => jt = null]) }, ...e] }) }(a, r)) } return function Wb(e) { const t = Ka(); if (!t) throw new C(401, !1); return t }() } } function Ka() { return jt?.get(Ip) ?? null } let Ip = (() => { class e { constructor(n) { this._injector = n, this._modules = [], this._destroyListeners = [], this._destroyed = !1 } bootstrapModuleFactory(n, r) { const o = function Sp(e, t) { let n; return n = "noop" === e ? new Bb : ("zone.js" === e ? void 0 : e) || new ve(t), n }(r?.ngZone, function Mp(e) { return { enableLongStackTrace: !1, shouldCoalesceEventChangeDetection: !(!e || !e.ngZoneEventCoalescing) || !1, shouldCoalesceRunChangeDetection: !(!e || !e.ngZoneRunCoalescing) || !1 } }(r)), i = [{ provide: ve, useValue: o }]; return o.run(() => { const s = Zt.create({ providers: i, parent: this.injector, name: n.moduleType.name }), a = n.create(s), u = a.injector.get(bn, null); if (!u) throw new C(402, !1); return o.runOutsideAngular(() => { const l = o.onError.subscribe({ next: c => { u.handleError(c) } }); a.onDestroy(() => { Ko(this._modules, a), l.unsubscribe() }) }), function Tp(e, t, n) { try { const r = n(); return ga(r) ? r.catch(o => { throw t.runOutsideAngular(() => e.handleError(o)), o }) : r } catch (r) { throw t.runOutsideAngular(() => e.handleError(r)), r } }(u, o, () => { const l = a.injector.get(Zo); return l.runInitializers(), l.donePromise.then(() => (function nh(e) { Ve(e, "Expected localeId to be defined"), "string" == typeof e && (th = e.toLowerCase().replace(/_/g, "-")) }(a.injector.get(Mt, Hn) || Hn), this._moduleDoBootstrap(a), a)) }) }) } bootstrapModule(n, r = []) { const o = Ap({}, r); return function $b(e, t, n) { const r = new Aa(n); return Promise.resolve(r) }(0, 0, n).then(i => this.bootstrapModuleFactory(i, o)) } _moduleDoBootstrap(n) { const r = n.injector.get(Xa); if (n._bootstrapComponents.length > 0) n._bootstrapComponents.forEach(o => r.bootstrap(o)); else { if (!n.instance.ngDoBootstrap) throw new C(-403, !1); n.instance.ngDoBootstrap(r) } this._modules.push(n) } onDestroy(n) { this._destroyListeners.push(n) } get injector() { return this._injector } destroy() { if (this._destroyed) throw new C(404, !1); this._modules.slice().forEach(r => r.destroy()), this._destroyListeners.forEach(r => r()); const n = this._injector.get(Qa, null); n && (n.forEach(r => r()), n.clear()), this._destroyed = !0 } get destroyed() { return this._destroyed } } return e.\u0275fac = function (n) { return new (n || e)(B(Zt)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac, providedIn: "platform" }), e })(); function Ap(e, t) { return Array.isArray(t) ? t.reduce(Ap, e) : { ...e, ...t } } let Xa = (() => { class e { get destroyed() { return this._destroyed } get injector() { return this._injector } constructor(n, r, o) { this._zone = n, this._injector = r, this._exceptionHandler = o, this._bootstrapListeners = [], this._views = [], this._runningTick = !1, this._stable = !0, this._destroyed = !1, this._destroyListeners = [], this.componentTypes = [], this.components = [], this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({ next: () => { this._zone.run(() => { this.tick() }) } }); const i = new Ie(a => { this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks, this._zone.runOutsideAngular(() => { a.next(this._stable), a.complete() }) }), s = new Ie(a => { let u; this._zone.runOutsideAngular(() => { u = this._zone.onStable.subscribe(() => { ve.assertNotInAngularZone(), Ga(() => { !this._stable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks && (this._stable = !0, a.next(!0)) }) }) }); const l = this._zone.onUnstable.subscribe(() => { ve.assertInAngularZone(), this._stable && (this._stable = !1, this._zone.runOutsideAngular(() => { a.next(!1) })) }); return () => { u.unsubscribe(), l.unsubscribe() } }); this.isStable = Am(i, s.pipe(function Nm(e = {}) { const { connector: t = (() => new wi), resetOnError: n = !0, resetOnComplete: r = !0, resetOnRefCountZero: o = !0 } = e; return i => { let s, a, u, l = 0, c = !1, d = !1; const f = () => { a?.unsubscribe(), a = void 0 }, h = () => { f(), s = u = void 0, c = d = !1 }, p = () => { const g = s; h(), g?.unsubscribe() }; return qn((g, D) => { l++, !d && !c && f(); const v = u = u ?? t(); D.add(() => { l--, 0 === l && !d && !c && (a = Si(p, o)) }), v.subscribe(D), !s && l > 0 && (s = new Wn({ next: E => v.next(E), error: E => { d = !0, f(), a = Si(h, n, E), v.error(E) }, complete: () => { c = !0, f(), a = Si(h, r), v.complete() } }), Pt(g).subscribe(s)) })(i) } }())) } bootstrap(n, r) { const o = n instanceof id; if (!this._injector.get(Zo).done) { !o && function Jn(e) { const t = G(e) || pe(e) || Se(e); return null !== t && t.standalone }(n); throw new C(405, St) } let s; s = o ? n : this._injector.get(Ao).resolveComponentFactory(n), this.componentTypes.push(s.componentType); const a = function Ub(e) { return e.isBoundToModule }(s) ? void 0 : this._injector.get($n), l = s.create(Zt.NULL, [], r || s.selector, a), c = l.location.nativeElement, d = l.injector.get(_p, null); return d?.registerApplication(c), l.onDestroy(() => { this.detachView(l.hostView), Ko(this.components, l), d?.unregisterApplication(c) }), this._loadComponent(l), l } tick() { if (this._runningTick) throw new C(101, !1); try { this._runningTick = !0; for (let n of this._views) n.detectChanges() } catch (n) { this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(n)) } finally { this._runningTick = !1 } } attachView(n) { const r = n; this._views.push(r), r.attachToAppRef(this) } detachView(n) { const r = n; Ko(this._views, r), r.detachFromAppRef() } _loadComponent(n) { this.attachView(n.hostView), this.tick(), this.components.push(n); const r = this._injector.get(Hb, []); r.push(...this._bootstrapListeners), r.forEach(o => o(n)) } ngOnDestroy() { if (!this._destroyed) try { this._destroyListeners.forEach(n => n()), this._views.slice().forEach(n => n.destroy()), this._onMicrotaskEmptySubscription.unsubscribe() } finally { this._destroyed = !0, this._views = [], this._bootstrapListeners = [], this._destroyListeners = [] } } onDestroy(n) { return this._destroyListeners.push(n), () => Ko(this._destroyListeners, n) } destroy() { if (this._destroyed) throw new C(406, !1); const n = this._injector; n.destroy && !n.destroyed && n.destroy() } get viewCount() { return this._views.length } warnIfDestroyed() { } } return e.\u0275fac = function (n) { return new (n || e)(B(ve), B(_n), B(bn)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); function Ko(e, t) { const n = e.indexOf(t); n > -1 && e.splice(n, 1) } class Op { constructor() { } supports(t) { return jo(t) } create(t) { return new nI(t) } } const tI = (e, t) => t; class nI { constructor(t) { this.length = 0, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null, this._identityChangesHead = null, this._identityChangesTail = null, this._trackByFn = t || tI } forEachItem(t) { let n; for (n = this._itHead; null !== n; n = n._next)t(n) } forEachOperation(t) { let n = this._itHead, r = this._removalsHead, o = 0, i = null; for (; n || r;) { const s = !r || n && n.currentIndex < Lp(r, o, i) ? n : r, a = Lp(s, o, i), u = s.currentIndex; if (s === r) o--, r = r._nextRemoved; else if (n = n._next, null == s.previousIndex) o++; else { i || (i = []); const l = a - o, c = u - o; if (l != c) { for (let f = 0; f < l; f++) { const h = f < i.length ? i[f] : i[f] = 0, p = h + f; c <= p && p < l && (i[f] = h + 1) } i[s.previousIndex] = c - l } } a !== u && t(s, a, u) } } forEachPreviousItem(t) { let n; for (n = this._previousItHead; null !== n; n = n._nextPrevious)t(n) } forEachAddedItem(t) { let n; for (n = this._additionsHead; null !== n; n = n._nextAdded)t(n) } forEachMovedItem(t) { let n; for (n = this._movesHead; null !== n; n = n._nextMoved)t(n) } forEachRemovedItem(t) { let n; for (n = this._removalsHead; null !== n; n = n._nextRemoved)t(n) } forEachIdentityChange(t) { let n; for (n = this._identityChangesHead; null !== n; n = n._nextIdentityChange)t(n) } diff(t) { if (null == t && (t = []), !jo(t)) throw new C(900, !1); return this.check(t) ? this : null } onDestroy() { } check(t) { this._reset(); let o, i, s, n = this._itHead, r = !1; if (Array.isArray(t)) { this.length = t.length; for (let a = 0; a < this.length; a++)i = t[a], s = this._trackByFn(a, i), null !== n && Object.is(n.trackById, s) ? (r && (n = this._verifyReinsertion(n, i, s, a)), Object.is(n.item, i) || this._addIdentityChange(n, i)) : (n = this._mismatch(n, i, s, a), r = !0), n = n._next } else o = 0, function hw(e, t) { if (Array.isArray(e)) for (let n = 0; n < e.length; n++)t(e[n]); else { const n = e[Symbol.iterator](); let r; for (; !(r = n.next()).done;)t(r.value) } }(t, a => { s = this._trackByFn(o, a), null !== n && Object.is(n.trackById, s) ? (r && (n = this._verifyReinsertion(n, a, s, o)), Object.is(n.item, a) || this._addIdentityChange(n, a)) : (n = this._mismatch(n, a, s, o), r = !0), n = n._next, o++ }), this.length = o; return this._truncate(n), this.collection = t, this.isDirty } get isDirty() { return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead } _reset() { if (this.isDirty) { let t; for (t = this._previousItHead = this._itHead; null !== t; t = t._next)t._nextPrevious = t._next; for (t = this._additionsHead; null !== t; t = t._nextAdded)t.previousIndex = t.currentIndex; for (this._additionsHead = this._additionsTail = null, t = this._movesHead; null !== t; t = t._nextMoved)t.previousIndex = t.currentIndex; this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null, this._identityChangesHead = this._identityChangesTail = null } } _mismatch(t, n, r, o) { let i; return null === t ? i = this._itTail : (i = t._prev, this._remove(t)), null !== (t = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(r, null)) ? (Object.is(t.item, n) || this._addIdentityChange(t, n), this._reinsertAfter(t, i, o)) : null !== (t = null === this._linkedRecords ? null : this._linkedRecords.get(r, o)) ? (Object.is(t.item, n) || this._addIdentityChange(t, n), this._moveAfter(t, i, o)) : t = this._addAfter(new rI(n, r), i, o), t } _verifyReinsertion(t, n, r, o) { let i = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(r, null); return null !== i ? t = this._reinsertAfter(i, t._prev, o) : t.currentIndex != o && (t.currentIndex = o, this._addToMoves(t, o)), t } _truncate(t) { for (; null !== t;) { const n = t._next; this._addToRemovals(this._unlink(t)), t = n } null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null), null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null) } _reinsertAfter(t, n, r) { null !== this._unlinkedRecords && this._unlinkedRecords.remove(t); const o = t._prevRemoved, i = t._nextRemoved; return null === o ? this._removalsHead = i : o._nextRemoved = i, null === i ? this._removalsTail = o : i._prevRemoved = o, this._insertAfter(t, n, r), this._addToMoves(t, r), t } _moveAfter(t, n, r) { return this._unlink(t), this._insertAfter(t, n, r), this._addToMoves(t, r), t } _addAfter(t, n, r) { return this._insertAfter(t, n, r), this._additionsTail = null === this._additionsTail ? this._additionsHead = t : this._additionsTail._nextAdded = t, t } _insertAfter(t, n, r) { const o = null === n ? this._itHead : n._next; return t._next = o, t._prev = n, null === o ? this._itTail = t : o._prev = t, null === n ? this._itHead = t : n._next = t, null === this._linkedRecords && (this._linkedRecords = new Rp), this._linkedRecords.put(t), t.currentIndex = r, t } _remove(t) { return this._addToRemovals(this._unlink(t)) } _unlink(t) { null !== this._linkedRecords && this._linkedRecords.remove(t); const n = t._prev, r = t._next; return null === n ? this._itHead = r : n._next = r, null === r ? this._itTail = n : r._prev = n, t } _addToMoves(t, n) { return t.previousIndex === n || (this._movesTail = null === this._movesTail ? this._movesHead = t : this._movesTail._nextMoved = t), t } _addToRemovals(t) { return null === this._unlinkedRecords && (this._unlinkedRecords = new Rp), this._unlinkedRecords.put(t), t.currentIndex = null, t._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = t, t._prevRemoved = null) : (t._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = t), t } _addIdentityChange(t, n) { return t.item = n, this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = t : this._identityChangesTail._nextIdentityChange = t, t } } class rI { constructor(t, n) { this.item = t, this.trackById = n, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null, this._nextIdentityChange = null } } class oI { constructor() { this._head = null, this._tail = null } add(t) { null === this._head ? (this._head = this._tail = t, t._nextDup = null, t._prevDup = null) : (this._tail._nextDup = t, t._prevDup = this._tail, t._nextDup = null, this._tail = t) } get(t, n) { let r; for (r = this._head; null !== r; r = r._nextDup)if ((null === n || n <= r.currentIndex) && Object.is(r.trackById, t)) return r; return null } remove(t) { const n = t._prevDup, r = t._nextDup; return null === n ? this._head = r : n._nextDup = r, null === r ? this._tail = n : r._prevDup = n, null === this._head } } class Rp { constructor() { this.map = new Map } put(t) { const n = t.trackById; let r = this.map.get(n); r || (r = new oI, this.map.set(n, r)), r.add(t) } get(t, n) { const o = this.map.get(t); return o ? o.get(t, n) : null } remove(t) { const n = t.trackById; return this.map.get(n).remove(t) && this.map.delete(n), t } get isEmpty() { return 0 === this.map.size } clear() { this.map.clear() } } function Lp(e, t, n) { const r = e.previousIndex; if (null === r) return r; let o = 0; return n && r < n.length && (o = n[r]), r + t + o } class kp { constructor() { } supports(t) { return t instanceof Map || da(t) } create() { return new iI } } class iI { constructor() { this._records = new Map, this._mapHead = null, this._appendAfter = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null } get isDirty() { return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead } forEachItem(t) { let n; for (n = this._mapHead; null !== n; n = n._next)t(n) } forEachPreviousItem(t) { let n; for (n = this._previousMapHead; null !== n; n = n._nextPrevious)t(n) } forEachChangedItem(t) { let n; for (n = this._changesHead; null !== n; n = n._nextChanged)t(n) } forEachAddedItem(t) { let n; for (n = this._additionsHead; null !== n; n = n._nextAdded)t(n) } forEachRemovedItem(t) { let n; for (n = this._removalsHead; null !== n; n = n._nextRemoved)t(n) } diff(t) { if (t) { if (!(t instanceof Map || da(t))) throw new C(900, !1) } else t = new Map; return this.check(t) ? this : null } onDestroy() { } check(t) { this._reset(); let n = this._mapHead; if (this._appendAfter = null, this._forEach(t, (r, o) => { if (n && n.key === o) this._maybeAddToChanges(n, r), this._appendAfter = n, n = n._next; else { const i = this._getOrCreateRecordForKey(o, r); n = this._insertBeforeOrAppend(n, i) } }), n) { n._prev && (n._prev._next = null), this._removalsHead = n; for (let r = n; null !== r; r = r._nextRemoved)r === this._mapHead && (this._mapHead = null), this._records.delete(r.key), r._nextRemoved = r._next, r.previousValue = r.currentValue, r.currentValue = null, r._prev = null, r._next = null } return this._changesTail && (this._changesTail._nextChanged = null), this._additionsTail && (this._additionsTail._nextAdded = null), this.isDirty } _insertBeforeOrAppend(t, n) { if (t) { const r = t._prev; return n._next = t, n._prev = r, t._prev = n, r && (r._next = n), t === this._mapHead && (this._mapHead = n), this._appendAfter = t, t } return this._appendAfter ? (this._appendAfter._next = n, n._prev = this._appendAfter) : this._mapHead = n, this._appendAfter = n, null } _getOrCreateRecordForKey(t, n) { if (this._records.has(t)) { const o = this._records.get(t); this._maybeAddToChanges(o, n); const i = o._prev, s = o._next; return i && (i._next = s), s && (s._prev = i), o._next = null, o._prev = null, o } const r = new sI(t); return this._records.set(t, r), r.currentValue = n, this._addToAdditions(r), r } _reset() { if (this.isDirty) { let t; for (this._previousMapHead = this._mapHead, t = this._previousMapHead; null !== t; t = t._next)t._nextPrevious = t._next; for (t = this._changesHead; null !== t; t = t._nextChanged)t.previousValue = t.currentValue; for (t = this._additionsHead; null != t; t = t._nextAdded)t.previousValue = t.currentValue; this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = null } } _maybeAddToChanges(t, n) { Object.is(n, t.currentValue) || (t.previousValue = t.currentValue, t.currentValue = n, this._addToChanges(t)) } _addToAdditions(t) { null === this._additionsHead ? this._additionsHead = this._additionsTail = t : (this._additionsTail._nextAdded = t, this._additionsTail = t) } _addToChanges(t) { null === this._changesHead ? this._changesHead = this._changesTail = t : (this._changesTail._nextChanged = t, this._changesTail = t) } _forEach(t, n) { t instanceof Map ? t.forEach(n) : Object.keys(t).forEach(r => n(t[r], r)) } } class sI { constructor(t) { this.key = t, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._prev = null, this._nextAdded = null, this._nextRemoved = null, this._nextChanged = null } } function jp() { return new ei([new Op]) } let ei = (() => { class e { constructor(n) { this.factories = n } static create(n, r) { if (null != r) { const o = r.factories.slice(); n = n.concat(o) } return new e(n) } static extend(n) { return { provide: e, useFactory: r => e.create(n, r || jp()), deps: [[e, new Do, new yo]] } } find(n) { const r = this.factories.find(o => o.supports(n)); if (null != r) return r; throw new C(901, !1) } } return e.\u0275prov = Q({ token: e, providedIn: "root", factory: jp }), e })(); function Bp() { return new xr([new kp]) } let xr = (() => { class e { constructor(n) { this.factories = n } static create(n, r) { if (r) { const o = r.factories.slice(); n = n.concat(o) } return new e(n) } static extend(n) { return { provide: e, useFactory: r => e.create(n, r || Bp()), deps: [[e, new Do, new yo]] } } find(n) { const r = this.factories.find(o => o.supports(n)); if (r) return r; throw new C(901, !1) } } return e.\u0275prov = Q({ token: e, providedIn: "root", factory: Bp }), e })(); const lI = Cp(null, "core", []); let cI = (() => { class e { constructor(n) { } } return e.\u0275fac = function (n) { return new (n || e)(B(Xa)) }, e.\u0275mod = Xn({ type: e }), e.\u0275inj = tn({}), e })(), ru = null; function ti() { return ru } class hI { } const Tt = new R("DocumentToken"), hu = /\s+/, Zp = []; let Qp = (() => { class e { constructor(n, r, o, i) { this._iterableDiffers = n, this._keyValueDiffers = r, this._ngEl = o, this._renderer = i, this.initialClasses = Zp, this.stateMap = new Map } set klass(n) { this.initialClasses = null != n ? n.trim().split(hu) : Zp } set ngClass(n) { this.rawClass = "string" == typeof n ? n.trim().split(hu) : n } ngDoCheck() { for (const r of this.initialClasses) this._updateState(r, !0); const n = this.rawClass; if (Array.isArray(n) || n instanceof Set) for (const r of n) this._updateState(r, !0); else if (null != n) for (const r of Object.keys(n)) this._updateState(r, Boolean(n[r])); this._applyStateDiff() } _updateState(n, r) { const o = this.stateMap.get(n); void 0 !== o ? (o.enabled !== r && (o.changed = !0, o.enabled = r), o.touched = !0) : this.stateMap.set(n, { enabled: r, changed: !0, touched: !0 }) } _applyStateDiff() { for (const n of this.stateMap) { const r = n[0], o = n[1]; o.changed ? (this._toggleClass(r, o.enabled), o.changed = !1) : o.touched || (o.enabled && this._toggleClass(r, !1), this.stateMap.delete(r)), o.touched = !1 } } _toggleClass(n, r) { (n = n.trim()).length > 0 && n.split(hu).forEach(o => { r ? this._renderer.addClass(this._ngEl.nativeElement, o) : this._renderer.removeClass(this._ngEl.nativeElement, o) }) } } return e.\u0275fac = function (n) { return new (n || e)(L(ei), L(xr), L(Cn), L(ud)) }, e.\u0275dir = $e({ type: e, selectors: [["", "ngClass", ""]], inputs: { klass: ["class", "klass"], ngClass: "ngClass" }, standalone: !0 }), e })(), N0 = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275mod = Xn({ type: e }), e.\u0275inj = tn({}), e })(); class uM extends hI { constructor() { super(...arguments), this.supportsDOMEvents = !0 } } class _u extends uM { static makeCurrent() { !function fI(e) { ru || (ru = e) }(new _u) } onAndCancel(t, n, r) { return t.addEventListener(n, r, !1), () => { t.removeEventListener(n, r, !1) } } dispatchEvent(t, n) { t.dispatchEvent(n) } remove(t) { t.parentNode && t.parentNode.removeChild(t) } createElement(t, n) { return (n = n || this.getDefaultDocument()).createElement(t) } createHtmlDocument() { return document.implementation.createHTMLDocument("fakeTitle") } getDefaultDocument() { return document } isElementNode(t) { return t.nodeType === Node.ELEMENT_NODE } isShadowRoot(t) { return t instanceof DocumentFragment } getGlobalEventTarget(t, n) { return "window" === n ? window : "document" === n ? t : "body" === n ? t.body : null } getBaseHref(t) { const n = function lM() { return Lr = Lr || document.querySelector("base"), Lr ? Lr.getAttribute("href") : null }(); return null == n ? null : function cM(e) { hi = hi || document.createElement("a"), hi.setAttribute("href", e); const t = hi.pathname; return "/" === t.charAt(0) ? t : `/${t}` }(n) } resetBaseElement() { Lr = null } getUserAgent() { return window.navigator.userAgent } getCookie(t) { return function XI(e, t) { t = encodeURIComponent(t); for (const n of e.split(";")) { const r = n.indexOf("="), [o, i] = -1 == r ? [n, ""] : [n.slice(0, r), n.slice(r + 1)]; if (o.trim() === t) return decodeURIComponent(i) } return null }(document.cookie, t) } } let hi, Lr = null; const lg = new R("TRANSITION_ID"), fM = [{ provide: fp, useFactory: function dM(e, t, n) { return () => { n.get(Zo).donePromise.then(() => { const r = ti(), o = t.querySelectorAll(`style[ng-transition="${e}"]`); for (let i = 0; i < o.length; i++)r.remove(o[i]) }) } }, deps: [lg, Tt, Zt], multi: !0 }]; let pM = (() => { class e { build() { return new XMLHttpRequest } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac }), e })(); const pi = new R("EventManagerPlugins"); let gi = (() => { class e { constructor(n, r) { this._zone = r, this._eventNameToPlugin = new Map, n.forEach(o => { o.manager = this }), this._plugins = n.slice().reverse() } addEventListener(n, r, o) { return this._findPluginFor(r).addEventListener(n, r, o) } addGlobalEventListener(n, r, o) { return this._findPluginFor(r).addGlobalEventListener(n, r, o) } getZone() { return this._zone } _findPluginFor(n) { const r = this._eventNameToPlugin.get(n); if (r) return r; const o = this._plugins; for (let i = 0; i < o.length; i++) { const s = o[i]; if (s.supports(n)) return this._eventNameToPlugin.set(n, s), s } throw new Error(`No event manager plugin found for event ${n}`) } } return e.\u0275fac = function (n) { return new (n || e)(B(pi), B(ve)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac }), e })(); class cg { constructor(t) { this._doc = t } addGlobalEventListener(t, n, r) { const o = ti().getGlobalEventTarget(this._doc, t); if (!o) throw new Error(`Unsupported event target ${o} for event ${n}`); return this.addEventListener(o, n, r) } } let dg = (() => { class e { constructor() { this.usageCount = new Map } addStyles(n) { for (const r of n) 1 === this.changeUsageCount(r, 1) && this.onStyleAdded(r) } removeStyles(n) { for (const r of n) 0 === this.changeUsageCount(r, -1) && this.onStyleRemoved(r) } onStyleRemoved(n) { } onStyleAdded(n) { } getAllStyles() { return this.usageCount.keys() } changeUsageCount(n, r) { const o = this.usageCount; let i = o.get(n) ?? 0; return i += r, i > 0 ? o.set(n, i) : o.delete(n), i } ngOnDestroy() { for (const n of this.getAllStyles()) this.onStyleRemoved(n); this.usageCount.clear() } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac }), e })(), kr = (() => { class e extends dg { constructor(n) { super(), this.doc = n, this.styleRef = new Map, this.hostNodes = new Set, this.resetHostNodes() } onStyleAdded(n) { for (const r of this.hostNodes) this.addStyleToHost(r, n) } onStyleRemoved(n) { const r = this.styleRef; r.get(n)?.forEach(i => i.remove()), r.delete(n) } ngOnDestroy() { super.ngOnDestroy(), this.styleRef.clear(), this.resetHostNodes() } addHost(n) { this.hostNodes.add(n); for (const r of this.getAllStyles()) this.addStyleToHost(n, r) } removeHost(n) { this.hostNodes.delete(n) } addStyleToHost(n, r) { const o = this.doc.createElement("style"); o.textContent = r, n.appendChild(o); const i = this.styleRef.get(r); i ? i.push(o) : this.styleRef.set(r, [o]) } resetHostNodes() { const n = this.hostNodes; n.clear(), n.add(this.doc.head) } } return e.\u0275fac = function (n) { return new (n || e)(B(Tt)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac }), e })(); const wu = { svg: "http://www.w3.org/2000/svg", xhtml: "http://www.w3.org/1999/xhtml", xlink: "http://www.w3.org/1999/xlink", xml: "http://www.w3.org/XML/1998/namespace", xmlns: "http://www.w3.org/2000/xmlns/", math: "http://www.w3.org/1998/MathML/" }, Eu = /%COMP%/g, pg = new R("RemoveStylesOnCompDestory", { providedIn: "root", factory: () => !1 }); function gg(e, t) { return t.flat(100).map(n => n.replace(Eu, e)) } function mg(e) { return t => { if ("__ngUnwrap__" === t) return e; !1 === e(t) && (t.preventDefault(), t.returnValue = !1) } } let Cu = (() => { class e { constructor(n, r, o, i) { this.eventManager = n, this.sharedStylesHost = r, this.appId = o, this.removeStylesOnCompDestory = i, this.rendererByCompId = new Map, this.defaultRenderer = new bu(n) } createRenderer(n, r) { if (!n || !r) return this.defaultRenderer; const o = this.getOrCreateRenderer(n, r); return o instanceof vg ? o.applyToHost(n) : o instanceof Iu && o.applyStyles(), o } getOrCreateRenderer(n, r) { const o = this.rendererByCompId; let i = o.get(r.id); if (!i) { const s = this.eventManager, a = this.sharedStylesHost, u = this.removeStylesOnCompDestory; switch (r.encapsulation) { case it.Emulated: i = new vg(s, a, r, this.appId, u); break; case it.ShadowDom: return new wM(s, a, n, r); default: i = new Iu(s, a, r, u) }i.onDestroy = () => o.delete(r.id), o.set(r.id, i) } return i } ngOnDestroy() { this.rendererByCompId.clear() } begin() { } end() { } } return e.\u0275fac = function (n) { return new (n || e)(B(gi), B(kr), B(Pr), B(pg)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac }), e })(); class bu { constructor(t) { this.eventManager = t, this.data = Object.create(null), this.destroyNode = null } destroy() { } createElement(t, n) { return n ? document.createElementNS(wu[n] || n, t) : document.createElement(t) } createComment(t) { return document.createComment(t) } createText(t) { return document.createTextNode(t) } appendChild(t, n) { (Dg(t) ? t.content : t).appendChild(n) } insertBefore(t, n, r) { t && (Dg(t) ? t.content : t).insertBefore(n, r) } removeChild(t, n) { t && t.removeChild(n) } selectRootElement(t, n) { let r = "string" == typeof t ? document.querySelector(t) : t; if (!r) throw new Error(`The selector "${t}" did not match any elements`); return n || (r.textContent = ""), r } parentNode(t) { return t.parentNode } nextSibling(t) { return t.nextSibling } setAttribute(t, n, r, o) { if (o) { n = o + ":" + n; const i = wu[o]; i ? t.setAttributeNS(i, n, r) : t.setAttribute(n, r) } else t.setAttribute(n, r) } removeAttribute(t, n, r) { if (r) { const o = wu[r]; o ? t.removeAttributeNS(o, n) : t.removeAttribute(`${r}:${n}`) } else t.removeAttribute(n) } addClass(t, n) { t.classList.add(n) } removeClass(t, n) { t.classList.remove(n) } setStyle(t, n, r, o) { o & (Ae.DashCase | Ae.Important) ? t.style.setProperty(n, r, o & Ae.Important ? "important" : "") : t.style[n] = r } removeStyle(t, n, r) { r & Ae.DashCase ? t.style.removeProperty(n) : t.style[n] = "" } setProperty(t, n, r) { t[n] = r } setValue(t, n) { t.nodeValue = n } listen(t, n, r) { return "string" == typeof t ? this.eventManager.addGlobalEventListener(t, n, mg(r)) : this.eventManager.addEventListener(t, n, mg(r)) } } function Dg(e) { return "TEMPLATE" === e.tagName && void 0 !== e.content } class wM extends bu { constructor(t, n, r, o) { super(t), this.sharedStylesHost = n, this.hostEl = r, this.shadowRoot = r.attachShadow({ mode: "open" }), this.sharedStylesHost.addHost(this.shadowRoot); const i = gg(o.id, o.styles); for (const s of i) { const a = document.createElement("style"); a.textContent = s, this.shadowRoot.appendChild(a) } } nodeOrShadowRoot(t) { return t === this.hostEl ? this.shadowRoot : t } appendChild(t, n) { return super.appendChild(this.nodeOrShadowRoot(t), n) } insertBefore(t, n, r) { return super.insertBefore(this.nodeOrShadowRoot(t), n, r) } removeChild(t, n) { return super.removeChild(this.nodeOrShadowRoot(t), n) } parentNode(t) { return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t))) } destroy() { this.sharedStylesHost.removeHost(this.shadowRoot) } } class Iu extends bu { constructor(t, n, r, o, i = r.id) { super(t), this.sharedStylesHost = n, this.removeStylesOnCompDestory = o, this.rendererUsageCount = 0, this.styles = gg(i, r.styles) } applyStyles() { this.sharedStylesHost.addStyles(this.styles), this.rendererUsageCount++ } destroy() { this.removeStylesOnCompDestory && (this.sharedStylesHost.removeStyles(this.styles), this.rendererUsageCount--, 0 === this.rendererUsageCount && this.onDestroy?.()) } } class vg extends Iu { constructor(t, n, r, o, i) { const s = o + "-" + r.id; super(t, n, r, i, s), this.contentAttr = function DM(e) { return "_ngcontent-%COMP%".replace(Eu, e) }(s), this.hostAttr = function vM(e) { return "_nghost-%COMP%".replace(Eu, e) }(s) } applyToHost(t) { this.applyStyles(), this.setAttribute(t, this.hostAttr, "") } createElement(t, n) { const r = super.createElement(t, n); return super.setAttribute(r, this.contentAttr, ""), r } } let EM = (() => { class e extends cg { constructor(n) { super(n) } supports(n) { return !0 } addEventListener(n, r, o) { return n.addEventListener(r, o, !1), () => this.removeEventListener(n, r, o) } removeEventListener(n, r, o) { return n.removeEventListener(r, o) } } return e.\u0275fac = function (n) { return new (n || e)(B(Tt)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac }), e })(); const _g = ["alt", "control", "meta", "shift"], CM = { "\b": "Backspace", "\t": "Tab", "\x7f": "Delete", "\x1b": "Escape", Del: "Delete", Esc: "Escape", Left: "ArrowLeft", Right: "ArrowRight", Up: "ArrowUp", Down: "ArrowDown", Menu: "ContextMenu", Scroll: "ScrollLock", Win: "OS" }, bM = { alt: e => e.altKey, control: e => e.ctrlKey, meta: e => e.metaKey, shift: e => e.shiftKey }; let IM = (() => { class e extends cg { constructor(n) { super(n) } supports(n) { return null != e.parseEventName(n) } addEventListener(n, r, o) { const i = e.parseEventName(r), s = e.eventCallback(i.fullKey, o, this.manager.getZone()); return this.manager.getZone().runOutsideAngular(() => ti().onAndCancel(n, i.domEventName, s)) } static parseEventName(n) { const r = n.toLowerCase().split("."), o = r.shift(); if (0 === r.length || "keydown" !== o && "keyup" !== o) return null; const i = e._normalizeKey(r.pop()); let s = "", a = r.indexOf("code"); if (a > -1 && (r.splice(a, 1), s = "code."), _g.forEach(l => { const c = r.indexOf(l); c > -1 && (r.splice(c, 1), s += l + ".") }), s += i, 0 != r.length || 0 === i.length) return null; const u = {}; return u.domEventName = o, u.fullKey = s, u } static matchEventFullKeyCode(n, r) { let o = CM[n.key] || n.key, i = ""; return r.indexOf("code.") > -1 && (o = n.code, i = "code."), !(null == o || !o) && (o = o.toLowerCase(), " " === o ? o = "space" : "." === o && (o = "dot"), _g.forEach(s => { s !== o && (0, bM[s])(n) && (i += s + ".") }), i += o, i === r) } static eventCallback(n, r, o) { return i => { e.matchEventFullKeyCode(i, n) && o.runGuarded(() => r(i)) } } static _normalizeKey(n) { return "esc" === n ? "escape" : n } } return e.\u0275fac = function (n) { return new (n || e)(B(Tt)) }, e.\u0275prov = Q({ token: e, factory: e.\u0275fac }), e })(); const AM = Cp(lI, "browser", [{ provide: gp, useValue: "browser" }, { provide: pp, useValue: function MM() { _u.makeCurrent() }, multi: !0 }, { provide: Tt, useFactory: function TM() { return function WD(e) { Ps = e }(document), document }, deps: [] }]), Cg = new R(""), bg = [{ provide: Qo, useClass: class hM { addToWindow(t) { Y.getAngularTestability = (r, o = !0) => { const i = t.findTestabilityInTree(r, o); if (null == i) throw new Error("Could not find testability for element."); return i }, Y.getAllAngularTestabilities = () => t.getAllTestabilities(), Y.getAllAngularRootElements = () => t.getAllRootElements(), Y.frameworkStabilizers || (Y.frameworkStabilizers = []), Y.frameworkStabilizers.push(r => { const o = Y.getAllAngularTestabilities(); let i = o.length, s = !1; const a = function (u) { s = s || u, i--, 0 == i && r(s) }; o.forEach(function (u) { u.whenStable(a) }) }) } findTestabilityInTree(t, n, r) { return null == n ? null : t.getTestability(n) ?? (r ? ti().isShadowRoot(n) ? this.findTestabilityInTree(t, n.host, !0) : this.findTestabilityInTree(t, n.parentElement, !0) : null) } }, deps: [] }, { provide: _p, useClass: qa, deps: [ve, Ya, Qo] }, { provide: qa, useClass: qa, deps: [ve, Ya, Qo] }], Ig = [{ provide: Vs, useValue: "root" }, { provide: bn, useFactory: function SM() { return new bn }, deps: [] }, { provide: pi, useClass: EM, multi: !0, deps: [Tt, ve, gp] }, { provide: pi, useClass: IM, multi: !0, deps: [Tt] }, { provide: Cu, useClass: Cu, deps: [gi, kr, Pr, pg] }, { provide: ad, useExisting: Cu }, { provide: dg, useExisting: kr }, { provide: kr, useClass: kr, deps: [Tt] }, { provide: gi, useClass: gi, deps: [pi, ve] }, { provide: class R0 { }, useClass: pM, deps: [] }, []]; let NM = (() => { class e { constructor(n) { } static withServerTransition(n) { return { ngModule: e, providers: [{ provide: Pr, useValue: n.appId }, { provide: lg, useExisting: Pr }, fM] } } } return e.\u0275fac = function (n) { return new (n || e)(B(Cg, 12)) }, e.\u0275mod = Xn({ type: e }), e.\u0275inj = tn({ providers: [...Ig, ...bg], imports: [N0, cI] }), e })(); typeof window < "u" && window; let jM = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275cmp = Bi({ type: e, selectors: [["pricing"]], inputs: { type: "type", option: "option", doit: "doit" }, decls: 15, vars: 6, consts: [[1, "option", 3, "ngClass"], [1, "price"], [1, "btn", "mt-5", "px-5", "py-3", "text-uppercase"]], template: function (r, o) { 1 & r && (je(0, "div", 0), jn(1, "span"), je(2, "h3"), kt(3), Be(), je(4, "ul")(5, "li", 1), kt(6), Be(), je(7, "li"), kt(8), Be(), je(9, "li"), kt(10), Be(), je(11, "li"), kt(12), Be(), je(13, "a", 2), kt(14, "Learn More"), Be()()()), 2 & r && (kn("ngClass", o.doit), Et(3), Xt(o.option.title), Et(3), Xt("month" === o.type ? "$" + o.option.priceMonth : "$" + o.option.priceYear), Et(2), Xt(o.option.storage), Et(2), Xt(o.option.users), Et(2), Xt(o.option.send)) }, dependencies: [Qp], styles: [".option[_ngcontent-%COMP%]{margin-top:20px;text-align:center;padding:30px;background-color:#fff;border-radius:20px}@media (min-width: 992px){.option[_ngcontent-%COMP%]{width:351px}}h3[_ngcontent-%COMP%]{margin:0;color:var(--Dark-Grayish-Blue)}ul[_ngcontent-%COMP%]{padding:0;list-style:none}li[_ngcontent-%COMP%]{padding:20px;border-bottom:1px solid var(--Light-Grayish-Blue);color:var(--Grayish-Blue)}.price[_ngcontent-%COMP%]{font-size:4rem;color:var(--Dark-Grayish-Blue)}.option[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{background-image:var(--Linear-Gradient);border-color:transparent;letter-spacing:1.8px;width:100%;color:#fff}.option[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-image:none;color:var(--our-blue);border-color:var(--our-blue)}@media (min-width: 992px){.special[_ngcontent-%COMP%]{transform:scale(1.1)}}.special[_ngcontent-%COMP%]{background-image:var(--Linear-Gradient)}.special[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .special[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{color:#fff}.special[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{background-color:#fff;color:var(--our-blue);border-color:transparent;background-image:none}.special[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-color:transparent;color:#fff;border-color:#fff}"] }) } return e })(), BM = (() => { class e { constructor() { this.title = "pricing-component-with-toggle", this.word = "month", this.optionBasic = { title: "Basic", priceMonth: "19.99", priceYear: "199.99", storage: "500 GB Storage", users: "2 Users Allowed", send: "Send up to 3 GB" }, this.optionPro = { title: "Professional", priceMonth: "24.99", priceYear: "249.99", storage: "1 TB Storage", users: "5 Users Allowed", send: "Send up to 10 GB" }, this.optionMaster = { title: "Master", priceMonth: "39.99", priceYear: "399.99", storage: "2 TB Storage", users: "10 Users Allowed", send: "Send up to 20 GB" } } change() { this.word = "month" === this.word ? "year" : "month" } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275cmp = Bi({ type: e, selectors: [["app-root"]], decls: 12, vars: 7, consts: [["src", "./assets/images/bg-top.svg", "alt", "bg-top", 1, "bg-top"], ["src", "./assets/images/bg-bottom.svg", "alt", "bg-bottom", 1, "bg-bottom"], [1, "switch"], ["type", "checkbox", "checked", "", 3, "click"], [1, "slider", "round"], [1, "d-flex", "justify-content-center", "container", "mt-5", "flex-wrap"], [1, "col-lg-4", "col-12", 3, "type", "option"], [1, "col-lg-4", "col-12", 3, "type", "option", "doit"]], template: function (r, o) { 1 & r && (jn(0, "img", 0)(1, "img", 1), je(2, "header")(3, "h1"), kt(4, "Our Pricing"), Be(), je(5, "label", 2)(6, "input", 3), ma("click", function () { return o.change() }), Be(), jn(7, "span", 4), Be()(), je(8, "main", 5), jn(9, "pricing", 6)(10, "pricing", 7)(11, "pricing", 6), Be()), 2 & r && (Et(9), kn("type", o.word)("option", o.optionBasic), Et(1), kn("type", o.word)("option", o.optionPro)("doit", "special"), Et(1), kn("type", o.word)("option", o.optionMaster)) }, dependencies: [jM], styles: ['.bg-top[_ngcontent-%COMP%]{position:absolute;right:0;top:0;z-index:-1}.bg-bottom[_ngcontent-%COMP%]{position:absolute;left:0;bottom:0;z-index:-1}header[_ngcontent-%COMP%]{text-align:center}h1[_ngcontent-%COMP%]{color:var(--Grayish-Blue);margin:20px auto;text-align:center;font-size:3rem}.switch[_ngcontent-%COMP%]{position:relative;display:inline-block;width:60px;height:34px}.switch[_ngcontent-%COMP%]:after{content:"Monthly";position:absolute;color:var(--Grayish-Blue);top:3px;right:-90px;opacity:.6}.switch[_ngcontent-%COMP%]:before{content:"Annually";position:absolute;color:var(--Grayish-Blue);top:3px;left:-90px;opacity:.6}.switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{opacity:0;width:0;height:0}.slider[_ngcontent-%COMP%]{position:absolute;cursor:pointer;inset:0;transition:.4s;background-image:var(--Linear-Gradient)}.slider[_ngcontent-%COMP%]:hover{opacity:.8}.slider[_ngcontent-%COMP%]:before{position:absolute;content:"";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}input[_ngcontent-%COMP%]:focus + .slider[_ngcontent-%COMP%]{box-shadow:0 0 1px var(--our-blue)}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]:before{transform:translate(26px)}.slider.round[_ngcontent-%COMP%]{border-radius:34px}.slider.round[_ngcontent-%COMP%]:before{border-radius:50%}'] }) } return e })(), VM = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = Xn({ type: e, bootstrap: [BM] }); static #n = this.\u0275inj = tn({ imports: [NM] }) } return e })(); AM().bootstrapModule(VM).catch(e => console.error(e)) } }, J => { J(J.s = 750) }]);
